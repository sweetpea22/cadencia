{"version":3,"file":"formik.umd.development.js","sources":["../src/utils.ts","../src/FormikContext.tsx","../src/Formik.tsx","../src/Field.tsx","../src/Form.tsx","../src/withFormik.tsx","../src/connect.tsx","../src/FieldArray.tsx","../src/ErrorMessage.tsx","../src/FastField.tsx"],"sourcesContent":["import clone from 'lodash/clone';\nimport toPath from 'lodash/toPath';\nimport * as React from 'react';\n\n// Assertions\n\n/** @private is the value an empty array? */\nexport const isEmptyArray = (value?: any) =>\n  Array.isArray(value) && value.length === 0;\n\n/** @private is the given object a Function? */\nexport const isFunction = (obj: any): obj is Function =>\n  typeof obj === 'function';\n\n/** @private is the given object an Object? */\nexport const isObject = (obj: any): obj is Object =>\n  obj !== null && typeof obj === 'object';\n\n/** @private is the given object an integer? */\nexport const isInteger = (obj: any): boolean =>\n  String(Math.floor(Number(obj))) === obj;\n\n/** @private is the given object a string? */\nexport const isString = (obj: any): obj is string =>\n  Object.prototype.toString.call(obj) === '[object String]';\n\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\nexport const isNaN = (obj: any): boolean => obj !== obj;\n\n/** @private Does a React component have exactly 0 children? */\nexport const isEmptyChildren = (children: any): boolean =>\n  React.Children.count(children) === 0;\n\n/** @private is the given object/value a promise? */\nexport const isPromise = (value: any): value is PromiseLike<any> =>\n  isObject(value) && isFunction(value.then);\n\n/** @private is the given object/value a type of synthetic event? */\nexport const isInputEvent = (value: any): value is React.SyntheticEvent<any> =>\n  value && isObject(value) && isObject(value.target);\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?Document} doc Defaults to current document.\n * @return {Element | null}\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\n */\nexport function getActiveElement(doc?: Document): Element | null {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\n/**\n * Deeply get a value from an object via its path.\n */\nexport function getIn(\n  obj: any,\n  key: string | string[],\n  def?: any,\n  p: number = 0\n) {\n  const path = toPath(key);\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  }\n  return obj === undefined ? def : obj;\n}\n\n/**\n * Deeply set a value from in object via it's path. If the value at `path`\n * has changed, return a shallow copy of obj with `value` set at `path`.\n * If `value` has not changed, return the original `obj`.\n *\n * Existing objects / arrays along `path` are also shallow copied. Sibling\n * objects along path retain the same internal js reference. Since new\n * objects / arrays are only created along `path`, we can test if anything\n * changed in a nested structure by comparing the object's reference in\n * the old and new object, similar to how russian doll cache invalidation\n * works.\n *\n * In earlier versions of this function, which used cloneDeep, there were\n * issues whereby settings a nested value would mutate the parent\n * instead of creating a new object. `clone` avoids that bug making a\n * shallow copy of the objects along the update path\n * so no object is mutated in place.\n *\n * Before changing this function, please read through the following\n * discussions.\n *\n * @see https://github.com/developit/linkstate\n * @see https://github.com/jaredpalmer/formik/pull/123\n */\nexport function setIn(obj: any, path: string, value: any): any {\n  let res: any = clone(obj); // this keeps inheritance when obj is a class\n  let resVal: any = res;\n  let i = 0;\n  let pathArray = toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    const currentPath: string = pathArray[i];\n    let currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = clone(currentObj);\n    } else {\n      const nextPath: string = pathArray[i + 1];\n      resVal = resVal[currentPath] =\n        isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  }\n\n  // Return original object if new value is the same as current\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined || isEmptyArray(value)) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  }\n\n  // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n  if ((i === 0 && value === undefined) || isEmptyArray(value)) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n\n/**\n * Recursively a set the same value for all keys and arrays nested object, cloning\n * @param object\n * @param value\n * @param visited\n * @param response\n */\nexport function setNestedObjectValues<T>(\n  object: any,\n  value: any,\n  visited: any = new WeakMap(),\n  response: any = {}\n): T {\n  for (let k of Object.keys(object)) {\n    const val = object[k];\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true);\n        // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport invariant from 'tiny-warning';\n\nexport const FormikContext = React.createContext<FormikContextType<any>>(\n  undefined as any\n);\nexport const FormikProvider = FormikContext.Provider;\nexport const FormikConsumer = FormikContext.Consumer;\n\nexport function useFormikContext<Values>() {\n  const formik = React.useContext<FormikContextType<Values>>(FormikContext);\n\n  invariant(\n    !!formik,\n    `Formik context is undefined, please verify you are calling useFormikContext() as child of a <Formik> component.`\n  );\n\n  return formik;\n}\n","import * as React from 'react';\nimport isEqual from 'react-fast-compare';\nimport deepmerge from 'deepmerge';\nimport isPlainObject from 'lodash/isPlainObject';\nimport {\n  FormikConfig,\n  FormikErrors,\n  FormikState,\n  FormikTouched,\n  FormikValues,\n  FormikProps,\n  FieldMetaProps,\n  FieldInputProps,\n} from './types';\nimport {\n  isFunction,\n  isString,\n  setIn,\n  isEmptyChildren,\n  isPromise,\n  setNestedObjectValues,\n  getActiveElement,\n  getIn,\n  isObject,\n} from './utils';\nimport { FormikProvider } from './FormikContext';\nimport invariant from 'tiny-warning';\nimport { LowPriority, unstable_runWithPriority } from 'scheduler';\n\ntype FormikMessage<Values> =\n  | { type: 'SUBMIT_ATTEMPT' }\n  | { type: 'SUBMIT_FAILURE' }\n  | { type: 'SUBMIT_SUCCESS' }\n  | { type: 'SET_ISVALIDATING'; payload: boolean }\n  | { type: 'SET_ISSUBMITTING'; payload: boolean }\n  | { type: 'SET_VALUES'; payload: Values }\n  | { type: 'SET_FIELD_VALUE'; payload: { field: string; value?: any } }\n  | { type: 'SET_FIELD_TOUCHED'; payload: { field: string; value?: boolean } }\n  | { type: 'SET_FIELD_ERROR'; payload: { field: string; value?: string } }\n  | { type: 'SET_TOUCHED'; payload: FormikTouched<Values> }\n  | { type: 'SET_ERRORS'; payload: FormikErrors<Values> }\n  | { type: 'SET_STATUS'; payload: any }\n  | {\n      type: 'SET_FORMIK_STATE';\n      payload: (s: FormikState<Values>) => FormikState<Values>;\n    }\n  | {\n      type: 'RESET_FORM';\n      payload: FormikState<Values>;\n    };\n\n// State reducer\nfunction formikReducer<Values>(\n  state: FormikState<Values>,\n  msg: FormikMessage<Values>\n) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return { ...state, values: msg.payload };\n    case 'SET_TOUCHED':\n      return { ...state, touched: msg.payload };\n    case 'SET_ERRORS':\n      if (isEqual(state.errors, msg.payload)) {\n        return state;\n      }\n\n      return { ...state, errors: msg.payload };\n    case 'SET_STATUS':\n      return { ...state, status: msg.payload };\n    case 'SET_ISSUBMITTING':\n      return { ...state, isSubmitting: msg.payload };\n    case 'SET_ISVALIDATING':\n      return { ...state, isValidating: msg.payload };\n    case 'SET_FIELD_VALUE':\n      return {\n        ...state,\n        values: setIn(state.values, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_TOUCHED':\n      return {\n        ...state,\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_ERROR':\n      return {\n        ...state,\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value),\n      };\n    case 'RESET_FORM':\n      return { ...state, ...msg.payload };\n    case 'SET_FORMIK_STATE':\n      return msg.payload(state);\n    case 'SUBMIT_ATTEMPT':\n      return {\n        ...state,\n        touched: setNestedObjectValues<FormikTouched<Values>>(\n          state.values,\n          true\n        ),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1,\n      };\n    case 'SUBMIT_FAILURE':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    case 'SUBMIT_SUCCESS':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    default:\n      return state;\n  }\n}\n\n// Initial empty states // objects\nconst emptyErrors: FormikErrors<unknown> = {};\nconst emptyTouched: FormikTouched<unknown> = {};\n\n// This is an object that contains a map of all registered fields\n// and their validate functions\ninterface FieldRegistry {\n  [field: string]: {\n    validate: (value: any) => string | Promise<string> | undefined;\n  };\n}\n\nexport function useFormik<Values extends FormikValues = FormikValues>({\n  validateOnChange = true,\n  validateOnBlur = true,\n  validateOnMount = false,\n  isInitialValid,\n  enableReinitialize = false,\n  onSubmit,\n  ...rest\n}: FormikConfig<Values>) {\n  const props = {\n    validateOnChange,\n    validateOnBlur,\n    validateOnMount,\n    onSubmit,\n    ...rest,\n  };\n  const initialValues = React.useRef(props.initialValues);\n  const initialErrors = React.useRef(props.initialErrors || emptyErrors);\n  const initialTouched = React.useRef(props.initialTouched || emptyTouched);\n  const initialStatus = React.useRef(props.initialStatus);\n  const isMounted = React.useRef<boolean>(false);\n  const fieldRegistry = React.useRef<FieldRegistry>({});\n  React.useEffect(() => {\n    if (__DEV__) {\n      invariant(\n        typeof isInitialValid === 'undefined',\n        'isInitialValid has been deprecated and will be removed in future versions of Formik. Please use initialErrors or validateOnMount instead.'\n      );\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  React.useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const [state, dispatch] = React.useReducer<\n    React.Reducer<FormikState<Values>, FormikMessage<Values>>\n  >(formikReducer, {\n    values: props.initialValues,\n    errors: props.initialErrors || emptyErrors,\n    touched: props.initialTouched || emptyTouched,\n    status: props.initialStatus,\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0,\n  });\n\n  const runValidateHandler = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      return new Promise((resolve, reject) => {\n        const maybePromisedErrors = (props.validate as any)(values, field);\n        if (maybePromisedErrors == null) {\n          // use loose null check here on purpose\n          resolve(emptyErrors);\n        } else if (isPromise(maybePromisedErrors)) {\n          (maybePromisedErrors as Promise<any>).then(\n            errors => {\n              resolve(errors || emptyErrors);\n            },\n            actualException => {\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validate />`,\n                  actualException\n                );\n              }\n\n              reject(actualException);\n            }\n          );\n        } else {\n          resolve(maybePromisedErrors);\n        }\n      });\n    },\n    [props.validate]\n  );\n\n  /**\n   * Run validation against a Yup schema and optionally run a function if successful\n   */\n  const runValidationSchema = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      const validationSchema = props.validationSchema;\n      const schema = isFunction(validationSchema)\n        ? validationSchema(field)\n        : validationSchema;\n      const promise =\n        field && schema.validateAt\n          ? schema.validateAt(field, values)\n          : validateYupSchema(values, schema);\n      return new Promise((resolve, reject) => {\n        promise.then(\n          () => {\n            resolve(emptyErrors);\n          },\n          (err: any) => {\n            // Yup will throw a validation error if validation fails. We catch those and\n            // resolve them into Formik errors. We can sniff is something is a Yup error\n            // by checking error.name.\n            // @see https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n            if (err.name === 'ValidationError') {\n              resolve(yupToFormErrors(err));\n            } else {\n              // We throw any other errors\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validationSchema />`,\n                  err\n                );\n              }\n\n              reject(err);\n            }\n          }\n        );\n      });\n    },\n    [props.validationSchema]\n  );\n\n  const runSingleFieldLevelValidation = React.useCallback(\n    (field: string, value: void | string): Promise<string> => {\n      return new Promise(resolve =>\n        resolve(fieldRegistry.current[field].validate(value))\n      );\n    },\n    []\n  );\n\n  const runFieldLevelValidations = React.useCallback(\n    (values: Values): Promise<FormikErrors<Values>> => {\n      const fieldKeysWithValidation: string[] = Object.keys(\n        fieldRegistry.current\n      ).filter(f => isFunction(fieldRegistry.current[f].validate));\n\n      // Construct an array with all of the field validation functions\n      const fieldValidations: Promise<string>[] =\n        fieldKeysWithValidation.length > 0\n          ? fieldKeysWithValidation.map(f =>\n              runSingleFieldLevelValidation(f, getIn(values, f))\n            )\n          : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n      return Promise.all(fieldValidations).then((fieldErrorsList: string[]) =>\n        fieldErrorsList.reduce((prev, curr, index) => {\n          if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n            return prev;\n          }\n          if (curr) {\n            prev = setIn(prev, fieldKeysWithValidation[index], curr);\n          }\n          return prev;\n        }, {})\n      );\n    },\n    [runSingleFieldLevelValidation]\n  );\n\n  // Run all validations and return the result\n  const runAllValidations = React.useCallback(\n    (values: Values) => {\n      return Promise.all([\n        runFieldLevelValidations(values),\n        props.validationSchema ? runValidationSchema(values) : {},\n        props.validate ? runValidateHandler(values) : {},\n      ]).then(([fieldErrors, schemaErrors, validateErrors]) => {\n        const combinedErrors = deepmerge.all<FormikErrors<Values>>(\n          [fieldErrors, schemaErrors, validateErrors],\n          { arrayMerge }\n        );\n        return combinedErrors;\n      });\n    },\n    [\n      props.validate,\n      props.validationSchema,\n      runFieldLevelValidations,\n      runValidateHandler,\n      runValidationSchema,\n    ]\n  );\n\n  // Run validations and dispatching the result as low-priority via rAF.\n  //\n  // The thinking is that validation as a result of onChange and onBlur\n  // should never block user input. Note: This method should never be called\n  // during the submission phase because validation prior to submission\n  // is actaully high-priority since we absolutely need to guarantee the\n  // form is valid before executing props.onSubmit.\n  const validateFormWithLowPriority = useEventCallback(\n    (values: Values = state.values) => {\n      return unstable_runWithPriority(LowPriority, () => {\n        return runAllValidations(values).then(combinedErrors => {\n          if (!!isMounted.current) {\n            dispatch({ type: 'SET_ERRORS', payload: combinedErrors });\n          }\n          return combinedErrors;\n        });\n      });\n    }\n  );\n\n  // Run all validations methods and update state accordingly\n  const validateFormWithHighPriority = useEventCallback(\n    (values: Values = state.values) => {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runAllValidations(values).then(combinedErrors => {\n        if (!!isMounted.current) {\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          if (!isEqual(state.errors, combinedErrors)) {\n            dispatch({ type: 'SET_ERRORS', payload: combinedErrors });\n          }\n        }\n        return combinedErrors;\n      });\n    }\n  );\n\n  React.useEffect(() => {\n    if (validateOnMount && isMounted.current === true) {\n      validateFormWithLowPriority(props.initialValues);\n    }\n  }, [props.initialValues, validateOnMount, validateFormWithLowPriority]);\n\n  const resetForm = React.useCallback(\n    (nextState?: Partial<FormikState<Values>>) => {\n      const values =\n        nextState && nextState.values\n          ? nextState.values\n          : initialValues.current;\n      const errors =\n        nextState && nextState.errors\n          ? nextState.errors\n          : initialErrors.current\n          ? initialErrors.current\n          : props.initialErrors || {};\n      const touched =\n        nextState && nextState.touched\n          ? nextState.touched\n          : initialTouched.current\n          ? initialTouched.current\n          : props.initialTouched || {};\n      const status =\n        nextState && nextState.status\n          ? nextState.status\n          : initialStatus.current\n          ? initialStatus.current\n          : props.initialStatus;\n      initialValues.current = values;\n      initialErrors.current = errors;\n      initialTouched.current = touched;\n      initialStatus.current = status;\n\n      dispatch({\n        type: 'RESET_FORM',\n        payload: {\n          isSubmitting: !!nextState && !!nextState.isSubmitting,\n          errors,\n          touched,\n          status,\n          values,\n          isValidating: !!nextState && !!nextState.isValidating,\n          submitCount:\n            !!nextState &&\n            !!nextState.submitCount &&\n            typeof nextState.submitCount === 'number'\n              ? nextState.submitCount\n              : 0,\n        },\n      });\n    },\n    [props.initialErrors, props.initialStatus, props.initialTouched]\n  );\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialValues.current, props.initialValues)\n    ) {\n      initialValues.current = props.initialValues;\n      resetForm();\n    }\n  }, [enableReinitialize, props.initialValues, resetForm]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialErrors.current, props.initialErrors)\n    ) {\n      initialErrors.current = props.initialErrors || emptyErrors;\n      dispatch({\n        type: 'SET_ERRORS',\n        payload: props.initialErrors || emptyErrors,\n      });\n    }\n  }, [enableReinitialize, props.initialErrors]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialTouched.current, props.initialTouched)\n    ) {\n      initialTouched.current = props.initialTouched || emptyTouched;\n      dispatch({\n        type: 'SET_TOUCHED',\n        payload: props.initialTouched || emptyTouched,\n      });\n    }\n  }, [enableReinitialize, props.initialTouched]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialStatus.current, props.initialStatus)\n    ) {\n      initialStatus.current = props.initialStatus;\n      dispatch({\n        type: 'SET_STATUS',\n        payload: props.initialStatus,\n      });\n    }\n  }, [enableReinitialize, props.initialStatus, props.initialTouched]);\n\n  const validateField = useEventCallback((name: string) => {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n\n    if (isFunction(fieldRegistry.current[name].validate)) {\n      const value = getIn(state.values, name);\n      const maybePromise = fieldRegistry.current[name].validate(value);\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({ type: 'SET_ISVALIDATING', payload: true });\n        return maybePromise\n          .then((x: any) => x)\n          .then((error: string) => {\n            dispatch({\n              type: 'SET_FIELD_ERROR',\n              payload: { field: name, value: error },\n            });\n            dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise as string | undefined,\n          },\n        });\n        return Promise.resolve(maybePromise as string | undefined);\n      }\n    } else {\n      return Promise.resolve();\n    }\n  });\n\n  const registerField = React.useCallback((name: string, { validate }: any) => {\n    fieldRegistry.current[name] = {\n      validate,\n    };\n  }, []);\n\n  const unregisterField = React.useCallback((name: string) => {\n    delete fieldRegistry.current[name];\n  }, []);\n\n  const setTouched = useEventCallback((touched: FormikTouched<Values>) => {\n    dispatch({ type: 'SET_TOUCHED', payload: touched });\n    return validateOnBlur\n      ? validateFormWithLowPriority(state.values)\n      : Promise.resolve();\n  });\n\n  const setErrors = React.useCallback((errors: FormikErrors<Values>) => {\n    dispatch({ type: 'SET_ERRORS', payload: errors });\n  }, []);\n\n  const setValues = useEventCallback((values: Values) => {\n    dispatch({ type: 'SET_VALUES', payload: values });\n    return validateOnChange\n      ? validateFormWithLowPriority(values)\n      : Promise.resolve();\n  });\n\n  const setFieldError = React.useCallback(\n    (field: string, value: string | undefined) => {\n      dispatch({\n        type: 'SET_FIELD_ERROR',\n        payload: { field, value },\n      });\n    },\n    []\n  );\n\n  const setFieldValue = useEventCallback(\n    (field: string, value: any, shouldValidate: boolean = true) => {\n      dispatch({\n        type: 'SET_FIELD_VALUE',\n        payload: {\n          field,\n          value,\n        },\n      });\n      return validateOnChange && shouldValidate\n        ? validateFormWithLowPriority(setIn(state.values, field, value))\n        : Promise.resolve();\n    }\n  );\n\n  const executeChange = React.useCallback(\n    (eventOrTextValue: string | React.ChangeEvent<any>, maybePath?: string) => {\n      // By default, assume that the first argument is a string. This allows us to use\n      // handleChange with React Native and React Native Web's onChangeText prop which\n      // provides just the value of the input.\n      let field = maybePath;\n      let val = eventOrTextValue;\n      let parsed;\n      // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n      // so we handle like we would a normal HTML change event.\n      if (!isString(eventOrTextValue)) {\n        // If we can, persist the event\n        // @see https://reactjs.org/docs/events.html#event-pooling\n        if ((eventOrTextValue as React.ChangeEvent<any>).persist) {\n          (eventOrTextValue as React.ChangeEvent<any>).persist();\n        }\n        const target = eventOrTextValue.target ? (eventOrTextValue as React.ChangeEvent<any>).target : (eventOrTextValue as React.ChangeEvent<any>).currentTarget;\n        \n        const {\n          type,\n          name,\n          id,\n          value,\n          checked,\n          outerHTML,\n          options,\n          multiple,\n        } = target;\n\n        field = maybePath ? maybePath : name ? name : id;\n        if (!field && __DEV__) {\n          warnAboutMissingIdentifier({\n            htmlContent: outerHTML,\n            documentationAnchorLink: 'handlechange-e-reactchangeeventany--void',\n            handlerName: 'handleChange',\n          });\n        }\n        val = /number|range/.test(type)\n          ? ((parsed = parseFloat(value)), isNaN(parsed) ? '' : parsed)\n          : /checkbox/.test(type) // checkboxes\n          ? getValueForCheckbox(getIn(state.values, field!), checked, value)\n          : !!multiple // <select multiple>\n          ? getSelectedValues(options)\n          : value;\n      }\n\n      if (field) {\n        // Set form fields by name\n        setFieldValue(field, val);\n      }\n    },\n    [setFieldValue, state.values]\n  );\n\n  const handleChange = React.useCallback(\n    (\n      eventOrPath: string | React.ChangeEvent<any>\n    ): void | ((eventOrTextValue: string | React.ChangeEvent<any>) => void) => {\n      if (isString(eventOrPath)) {\n        return event => executeChange(event, eventOrPath);\n      } else {\n        executeChange(eventOrPath);\n      }\n    },\n    [executeChange]\n  );\n\n  const setFieldTouched = useEventCallback(\n    (\n      field: string,\n      touched: boolean = true,\n      shouldValidate: boolean = true\n    ) => {\n      dispatch({\n        type: 'SET_FIELD_TOUCHED',\n        payload: {\n          field,\n          value: touched,\n        },\n      });\n      return validateOnBlur && shouldValidate\n        ? validateFormWithLowPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const executeBlur = React.useCallback(\n    (e: any, path?: string) => {\n      if (e.persist) {\n        e.persist();\n      }\n      const { name, id, outerHTML } = e.target;\n      const field = path ? path : name ? name : id;\n\n      if (!field && __DEV__) {\n        warnAboutMissingIdentifier({\n          htmlContent: outerHTML,\n          documentationAnchorLink: 'handleblur-e-any--void',\n          handlerName: 'handleBlur',\n        });\n      }\n\n      setFieldTouched(field, true);\n    },\n    [setFieldTouched]\n  );\n\n  const handleBlur = React.useCallback(\n    (eventOrString: any): void | ((e: any) => void) => {\n      if (isString(eventOrString)) {\n        return event => executeBlur(event, eventOrString);\n      } else {\n        executeBlur(eventOrString);\n      }\n    },\n    [executeBlur]\n  );\n\n  const setFormikState = React.useCallback(\n    (\n      stateOrCb:\n        | FormikState<Values>\n        | ((state: FormikState<Values>) => FormikState<Values>)\n    ): void => {\n      if (isFunction(stateOrCb)) {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: stateOrCb });\n      } else {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: () => stateOrCb });\n      }\n    },\n    []\n  );\n\n  const setStatus = React.useCallback((status: any) => {\n    dispatch({ type: 'SET_STATUS', payload: status });\n  }, []);\n\n  const setSubmitting = React.useCallback((isSubmitting: boolean) => {\n    dispatch({ type: 'SET_ISSUBMITTING', payload: isSubmitting });\n  }, []);\n\n  const imperativeMethods = {\n    resetForm,\n\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    setErrors,\n    setFieldError,\n    setFieldTouched,\n    setFieldValue,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    setFormikState,\n  };\n\n  const executeSubmit = useEventCallback(() => {\n    return onSubmit(state.values, imperativeMethods);\n  });\n\n  const submitForm = useEventCallback(() => {\n    dispatch({ type: 'SUBMIT_ATTEMPT' });\n    return validateFormWithHighPriority().then(\n      (combinedErrors: FormikErrors<Values>) => {\n        const isActuallyValid = Object.keys(combinedErrors).length === 0;\n        if (isActuallyValid) {\n          const promiseOrUndefined = executeSubmit();\n          if (promiseOrUndefined === undefined) {\n            return;\n          }\n\n          return Promise.resolve(promiseOrUndefined)\n            .then(() => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_SUCCESS' });\n              }\n            })\n            .catch(_errors => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_FAILURE' });\n                throw _errors;\n              }\n            });\n        } else if (!!isMounted.current) {\n          // ^^^ Make sure Formik is still mounted before calling setState\n          dispatch({ type: 'SUBMIT_FAILURE' });\n          throw combinedErrors;\n        }\n        return;\n      }\n    );\n  });\n\n  const handleSubmit = useEventCallback(\n    (e?: React.FormEvent<HTMLFormElement>) => {\n      if (e && e.preventDefault && isFunction(e.preventDefault)) {\n        e.preventDefault();\n      }\n\n      if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n        e.stopPropagation();\n      }\n\n      // Warn if form submission is triggered by a <button> without a\n      // specified `type` attribute during development. This mitigates\n      // a common gotcha in forms with both reset and submit buttons,\n      // where the dev forgets to add type=\"button\" to the reset button.\n      if (__DEV__ && typeof document !== 'undefined') {\n        // Safely get the active element (works with IE)\n        const activeElement = getActiveElement();\n        if (\n          activeElement !== null &&\n          activeElement instanceof HTMLButtonElement\n        ) {\n          invariant(\n            activeElement.attributes &&\n              activeElement.attributes.getNamedItem('type'),\n            'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type=\"submit\"`. If this is not a submit button, please add `type=\"button\"`.'\n          );\n        }\n      }\n\n      submitForm();\n    }\n  );\n  const handleReset = useEventCallback(e => {\n    if (e && e.preventDefault && isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    }\n\n    if (props.onReset) {\n      const maybePromisedOnReset = (props.onReset as any)(\n        state.values,\n        imperativeMethods\n      );\n\n      if (isPromise(maybePromisedOnReset)) {\n        (maybePromisedOnReset as Promise<any>).then(resetForm);\n      } else {\n        resetForm();\n      }\n    } else {\n      resetForm();\n    }\n  });\n\n  const getFieldMeta = React.useCallback(\n    (name: string): FieldMetaProps<any> => {\n      return {\n        value: getIn(state.values, name),\n        error: getIn(state.errors, name),\n        touched: !!getIn(state.touched, name),\n        initialValue: getIn(initialValues.current, name),\n        initialTouched: !!getIn(initialTouched.current, name),\n        initialError: getIn(initialErrors.current, name),\n      };\n    },\n    [state.errors, state.touched, state.values]\n  );\n\n  const getFieldProps = React.useCallback(\n    (nameOrOptions): FieldInputProps<any> => {\n      const isAnObject = isObject(nameOrOptions);\n      const name = isAnObject ? nameOrOptions.name : nameOrOptions;\n      const valueState = getIn(state.values, name);\n\n      const field: FieldInputProps<any> = {\n        name,\n        value: valueState,\n        onChange: handleChange,\n        onBlur: handleBlur,\n      };\n      if (isAnObject) {\n        const {\n          type,\n          value: valueProp, // value is special for checkboxes\n          as: is,\n          multiple,\n        } = nameOrOptions;\n\n        if (type === 'checkbox') {\n          if (valueProp === undefined) {\n            field.checked = !!valueState;\n          } else {\n            field.checked = !!(\n              Array.isArray(valueState) && ~valueState.indexOf(valueProp)\n            );\n            field.value = valueProp;\n          }\n        } else if (type === 'radio') {\n          field.checked = valueState === valueProp;\n          field.value = valueProp;\n        } else if (is === 'select' && multiple) {\n          field.value = field.value || [];\n          field.multiple = true;\n        }\n      }\n      return field;\n    },\n    [handleBlur, handleChange, state.values]\n  );\n\n  const dirty = React.useMemo(\n    () => !isEqual(initialValues.current, state.values),\n    [initialValues.current, state.values]\n  );\n\n  const isValid = React.useMemo(\n    () =>\n      typeof isInitialValid !== 'undefined'\n        ? dirty\n          ? state.errors && Object.keys(state.errors).length === 0\n          : isInitialValid !== false && isFunction(isInitialValid)\n          ? (isInitialValid as (props: FormikConfig<Values>) => boolean)(props)\n          : (isInitialValid as boolean)\n        : state.errors && Object.keys(state.errors).length === 0,\n    [isInitialValid, dirty, state.errors, props]\n  );\n\n  const ctx = {\n    ...state,\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur,\n    handleChange,\n    handleReset,\n    handleSubmit,\n    resetForm,\n    setErrors,\n    setFormikState,\n    setFieldTouched,\n    setFieldValue,\n    setFieldError,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    isValid,\n    dirty,\n    unregisterField,\n    registerField,\n    getFieldProps,\n    getFieldMeta,\n    validateOnBlur,\n    validateOnChange,\n    validateOnMount,\n  };\n\n  return ctx;\n}\n\nexport function Formik<\n  Values extends FormikValues = FormikValues,\n  ExtraProps = {}\n>(props: FormikConfig<Values> & ExtraProps) {\n  const formikbag = useFormik<Values>(props);\n  const { component, children, render } = props;\n  React.useEffect(() => {\n    if (__DEV__) {\n      invariant(\n        !props.render,\n        `<Formik render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Formik render={(props) => ...} /> with <Formik>{(props) => ...}</Formik>`\n      );\n    }\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <FormikProvider value={formikbag}>\n      {component\n        ? React.createElement(component as any, formikbag)\n        : render\n        ? render(formikbag)\n        : children // children come last, always called\n        ? isFunction(children)\n          ? (children as (bag: FormikProps<Values>) => React.ReactNode)(\n              formikbag as FormikProps<Values>\n            )\n          : !isEmptyChildren(children)\n          ? React.Children.only(children)\n          : null\n        : null}\n    </FormikProvider>\n  );\n}\n\nfunction warnAboutMissingIdentifier({\n  htmlContent,\n  documentationAnchorLink,\n  handlerName,\n}: {\n  htmlContent: string;\n  documentationAnchorLink: string;\n  handlerName: string;\n}) {\n  console.warn(\n    `Warning: Formik called \\`${handlerName}\\`, but you forgot to pass an \\`id\\` or \\`name\\` attribute to your input:\n    ${htmlContent}\n    Formik cannot determine which value to update. For more info see https://github.com/jaredpalmer/formik#${documentationAnchorLink}\n  `\n  );\n}\n\n/**\n * Transform Yup ValidationError to a more usable object\n */\nexport function yupToFormErrors<Values>(yupError: any): FormikErrors<Values> {\n  let errors: FormikErrors<Values> = {};\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return setIn(errors, yupError.path, yupError.message);\n    }\n    for (let err of yupError.inner) {\n      if (!getIn(errors, err.path)) {\n        errors = setIn(errors, err.path, err.message);\n      }\n    }\n  }\n  return errors;\n}\n\n/**\n * Validate a yup schema.\n */\nexport function validateYupSchema<T extends FormikValues>(\n  values: T,\n  schema: any,\n  sync: boolean = false,\n  context: any = {}\n): Promise<Partial<T>> {\n  const validateData: FormikValues = prepareDataForValidation(values);\n  return schema[sync ? 'validateSync' : 'validate'](validateData, {\n    abortEarly: false,\n    context: context,\n  });\n}\n\n/**\n * Recursively prepare values.\n */\nexport function prepareDataForValidation<T extends FormikValues>(\n  values: T\n): FormikValues {\n  let data: FormikValues = {};\n  for (let k in values) {\n    if (values.hasOwnProperty(k)) {\n      const key = String(k);\n      if (Array.isArray(values[key]) === true) {\n        data[key] = values[key].map((value: any) => {\n          if (Array.isArray(value) === true || isPlainObject(value)) {\n            return prepareDataForValidation(value);\n          } else {\n            return value !== '' ? value : undefined;\n          }\n        });\n      } else if (isPlainObject(values[key])) {\n        data[key] = prepareDataForValidation(values[key]);\n      } else {\n        data[key] = values[key] !== '' ? values[key] : undefined;\n      }\n    }\n  }\n  return data;\n}\n\n/**\n * deepmerge array merging algorithm\n * https://github.com/KyleAMathews/deepmerge#combine-array\n */\nfunction arrayMerge(target: any[], source: any[], options: any): any[] {\n  const destination = target.slice();\n\n  source.forEach(function(e: any, i: number) {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone\n        ? deepmerge(Array.isArray(e) ? [] : {}, e, options)\n        : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n\n/** Return multi select values based on an array of options */\nfunction getSelectedValues(options: any[]) {\n  return Array.from(options)\n    .filter(el => el.selected)\n    .map(el => el.value);\n}\n\n/** Return the next value for a checkbox */\nfunction getValueForCheckbox(\n  currentValue: string | any[],\n  checked: boolean,\n  valueProp: any\n) {\n  // eslint-disable-next-line eqeqeq\n  if (valueProp == 'true' || valueProp == 'false') {\n    return !!checked;\n  }\n\n  if (checked && valueProp) {\n    return Array.isArray(currentValue)\n      ? currentValue.concat(valueProp)\n      : [valueProp];\n  }\n  if (!Array.isArray(currentValue)) {\n    return !currentValue;\n  }\n  const index = currentValue.indexOf(valueProp);\n  if (index < 0) {\n    return currentValue;\n  }\n  return currentValue.slice(0, index).concat(currentValue.slice(index + 1));\n}\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? React.useLayoutEffect\n    : React.useEffect;\n\nfunction useEventCallback<T extends (...args: any[]) => any>(fn: T): T {\n  const ref: any = React.useRef(fn);\n\n  // we copy a ref to the callback scoped to the current state/props on each render\n  useIsomorphicLayoutEffect(() => {\n    ref.current = fn;\n  });\n\n  return React.useCallback(\n    (...args: any[]) => ref.current.apply(void 0, args),\n    []\n  ) as T;\n}\n","import * as React from 'react';\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FieldMetaProps,\n  FieldInputProps,\n  FieldValidator,\n} from './types';\nimport { useFormikContext } from './FormikContext';\nimport { isFunction, isEmptyChildren, isObject } from './utils';\nimport invariant from 'tiny-warning';\n\nexport interface FieldProps<V = any> {\n  field: FieldInputProps<V>;\n  form: FormikProps<V>; // if ppl want to restrict this for a given form, let them.\n  meta: FieldMetaProps<V>;\n}\n\nexport interface FieldConfig {\n  /**\n   * Field component to render. Can either be a string like 'select' or a component.\n   */\n  component?:\n    | keyof JSX.IntrinsicElements\n    | React.ComponentType<FieldProps<any>>\n    | React.ComponentType;\n\n  /**\n   * Component to render. Can either be a string e.g. 'select', 'input', or 'textarea', or a component.\n   */\n  as?:\n    | React.ComponentType<FieldProps<any>['field']>\n    | keyof JSX.IntrinsicElements\n    | React.ComponentType;\n\n  /**\n   * Render prop (works like React router's <Route render={props =>} />)\n   * @deprecated\n   */\n  render?: (props: FieldProps<any>) => React.ReactNode;\n\n  /**\n   * Children render function <Field name>{props => ...}</Field>)\n   */\n  children?: ((props: FieldProps<any>) => React.ReactNode) | React.ReactNode;\n\n  /**\n   * Validate a single field value independently\n   */\n  validate?: FieldValidator;\n\n  /**\n   * Field name\n   */\n  name: string;\n\n  /** HTML input type */\n  type?: string;\n\n  /** Field value */\n  value?: any;\n\n  /** Inner ref */\n  innerRef?: (instance: any) => void;\n}\n\nexport type FieldAttributes<T> = GenericFieldHTMLAttributes &\n  FieldConfig &\n  T & { name: string };\n\nexport function useField<Val = any>(\n  propsOrFieldName: string | FieldAttributes<Val>\n): [FieldInputProps<Val>, FieldMetaProps<Val>] {\n  const formik = useFormikContext();\n  const {\n    getFieldProps,\n    getFieldMeta,\n    registerField,\n    unregisterField,\n  } = formik;\n  const isAnObject = isObject(propsOrFieldName);\n  const fieldName = isAnObject\n    ? (propsOrFieldName as FieldAttributes<Val>).name\n    : (propsOrFieldName as string);\n  const validateFn = isAnObject\n    ? (propsOrFieldName as FieldAttributes<Val>).validate\n    : undefined;\n  React.useEffect(() => {\n    if (fieldName) {\n      registerField(fieldName, {\n        validate: validateFn,\n      });\n    }\n    return () => {\n      if (fieldName) {\n        unregisterField(fieldName);\n      }\n    };\n  }, [registerField, unregisterField, fieldName, validateFn]);\n  if (__DEV__) {\n    invariant(\n      formik,\n      'useField() / <Field /> must be used underneath a <Formik> component or withFormik() higher order component'\n    );\n  }\n\n  if (isObject(propsOrFieldName)) {\n    invariant(\n      (propsOrFieldName as FieldAttributes<Val>).name,\n      'Invalid field name. Either pass `useField` a string or an object containing a `name` key.'\n    );\n\n    return [\n      getFieldProps(propsOrFieldName),\n      getFieldMeta((propsOrFieldName as FieldAttributes<Val>).name),\n    ];\n  }\n\n  return [\n    getFieldProps({ name: propsOrFieldName }),\n    getFieldMeta(propsOrFieldName),\n  ];\n}\n\nexport function Field({\n  validate,\n  name,\n  render,\n  children,\n  as: is, // `as` is reserved in typescript lol\n  component,\n  ...props\n}: FieldAttributes<any>) {\n  const {\n    validate: _validate,\n    validationSchema: _validationSchema,\n\n    ...formik\n  } = useFormikContext();\n\n  React.useEffect(() => {\n    if (__DEV__) {\n      invariant(\n        !render,\n        `<Field render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Field name=\"${name}\" render={({field, form}) => ...} /> with <Field name=\"${name}\">{({field, form, meta}) => ...}</Field>`\n      );\n\n      invariant(\n        !(is && children && isFunction(children)),\n        'You should not use <Field as> and <Field children> as a function in the same <Field> component; <Field as> will be ignored.'\n      );\n\n      invariant(\n        !(component && children && isFunction(children)),\n        'You should not use <Field component> and <Field children> as a function in the same <Field> component; <Field component> will be ignored.'\n      );\n\n      invariant(\n        !(render && children && !isEmptyChildren(children)),\n        'You should not use <Field render> and <Field children> in the same <Field> component; <Field children> will be ignored'\n      );\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  // Register field and field-level validation with parent <Formik>\n  const { registerField, unregisterField } = formik;\n  React.useEffect(() => {\n    registerField(name, {\n      validate: validate,\n    });\n    return () => {\n      unregisterField(name);\n    };\n  }, [registerField, unregisterField, name, validate]);\n  const field = formik.getFieldProps({ name, ...props });\n  const meta = formik.getFieldMeta(name);\n  const legacyBag = { field, form: formik };\n\n  if (render) {\n    return render({ ...legacyBag, meta });\n  }\n\n  if (isFunction(children)) {\n    return children({ ...legacyBag, meta });\n  }\n\n  if (component) {\n    // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n    if (typeof component === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        component,\n        { ref: innerRef, ...field, ...rest },\n        children\n      );\n    }\n    // We don't pass `meta` for backwards compat\n    return React.createElement(\n      component,\n      { field, form: formik, ...props },\n      children\n    );\n  }\n\n  // default to input here so we can check for both `as` and `children` above\n  const asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    const { innerRef, ...rest } = props;\n    return React.createElement(\n      asElement,\n      { ref: innerRef, ...field, ...rest },\n      children\n    );\n  }\n\n  return React.createElement(asElement, { ...field, ...props }, children);\n}\n","import * as React from 'react';\nimport { useFormikContext } from './FormikContext';\n\nexport type FormikFormProps = Pick<\n  React.FormHTMLAttributes<HTMLFormElement>,\n  Exclude<\n    keyof React.FormHTMLAttributes<HTMLFormElement>,\n    'onReset' | 'onSubmit'\n  >\n>;\n\ntype FormProps = React.ComponentPropsWithoutRef<'form'>;\n\n// @todo tests\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props: FormikFormProps, ref) => {\n    // iOS needs an \"action\" attribute for nice input: https://stackoverflow.com/a/39485162/406725\n    // We default the action to \"#\" in case the preventDefault fails (just updates the URL hash)\n    const { action, ...rest } = props;\n    const _action = action || '#';\n    const { handleReset, handleSubmit } = useFormikContext();\n    return (\n      <form\n        onSubmit={handleSubmit}\n        ref={ref}\n        onReset={handleReset}\n        action={_action}\n        {...rest}\n      />\n    );\n  }\n);\n\nForm.displayName = 'Form';\n","import hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { Formik } from './Formik';\nimport {\n  FormikHelpers,\n  FormikProps,\n  FormikSharedConfig,\n  FormikValues,\n  FormikTouched,\n  FormikErrors,\n} from './types';\nimport { isFunction } from './utils';\n\n/**\n * State, handlers, and helpers injected as props into the wrapped form component.\n * Used with withFormik()\n *\n * @deprecated  Use `OuterProps & FormikProps<Values>` instead.\n */\nexport type InjectedFormikProps<Props, Values> = Props & FormikProps<Values>;\n\n/**\n * Formik actions + { props }\n */\nexport type FormikBag<P, V> = { props: P } & FormikHelpers<V>;\n\n/**\n * withFormik() configuration options. Backwards compatible.\n */\nexport interface WithFormikConfig<\n  Props,\n  Values extends FormikValues = FormikValues,\n  DeprecatedPayload = Values\n> extends FormikSharedConfig<Props> {\n  /**\n   * Set the display name of the component. Useful for React DevTools.\n   */\n  displayName?: string;\n\n  /**\n   * Submission handler\n   */\n  handleSubmit: (values: Values, formikBag: FormikBag<Props, Values>) => void;\n\n  /**\n   * Map props to the form values\n   */\n  mapPropsToValues?: (props: Props) => Values;\n\n  /**\n   * Map props to the form values\n   */\n  mapPropsToStatus?: (props: Props) => any;\n\n  /**\n   * Map props to the form touched state\n   */\n  mapPropsToTouched?: (props: Props) => FormikTouched<Values>;\n\n  /**\n   * Map props to the form touched state\n   */\n  mapPropsToErrors?: (props: Props) => FormikErrors<Values>;\n\n  /**\n   * @deprecated in 0.9.0 (but needed to break TS types)\n   */\n  mapValuesToPayload?: (values: Values) => DeprecatedPayload;\n\n  /**\n   * A Yup Schema or a function that returns a Yup schema\n   */\n  validationSchema?: any | ((props: Props) => any);\n\n  /**\n   * Validation function. Must return an error object or promise that\n   * throws an error object where that object keys map to corresponding value.\n   */\n  validate?: (values: Values, props: Props) => void | object | Promise<any>;\n}\n\nexport type CompositeComponent<P> =\n  | React.ComponentClass<P>\n  | React.StatelessComponent<P>;\n\nexport interface ComponentDecorator<TOwnProps, TMergedProps> {\n  (component: CompositeComponent<TMergedProps>): React.ComponentType<TOwnProps>;\n}\n\nexport interface InferableComponentDecorator<TOwnProps> {\n  <T extends CompositeComponent<TOwnProps>>(component: T): T;\n}\n\n/**\n * A public higher-order component to access the imperative API\n */\nexport function withFormik<\n  OuterProps extends object,\n  Values extends FormikValues,\n  Payload = Values\n>({\n  mapPropsToValues = (vanillaProps: OuterProps): Values => {\n    let val: Values = {} as Values;\n    for (let k in vanillaProps) {\n      if (\n        vanillaProps.hasOwnProperty(k) &&\n        typeof vanillaProps[k] !== 'function'\n      ) {\n        // @todo TypeScript fix\n        (val as any)[k] = vanillaProps[k];\n      }\n    }\n    return val as Values;\n  },\n  ...config\n}: WithFormikConfig<OuterProps, Values, Payload>): ComponentDecorator<\n  OuterProps,\n  OuterProps & FormikProps<Values>\n> {\n  return function createFormik(\n    Component: CompositeComponent<OuterProps & FormikProps<Values>>\n  ): React.ComponentClass<OuterProps> {\n    const componentDisplayName =\n      Component.displayName ||\n      Component.name ||\n      (Component.constructor && Component.constructor.name) ||\n      'Component';\n    /**\n     * We need to use closures here for to provide the wrapped component's props to\n     * the respective withFormik config methods.\n     */\n    class C extends React.Component<OuterProps, {}> {\n      static displayName = `WithFormik(${componentDisplayName})`;\n\n      validate = (values: Values): void | object | Promise<any> => {\n        return config.validate!(values, this.props);\n      };\n\n      validationSchema = () => {\n        return isFunction(config.validationSchema)\n          ? config.validationSchema!(this.props)\n          : config.validationSchema;\n      };\n\n      handleSubmit = (values: Values, actions: FormikHelpers<Values>) => {\n        return config.handleSubmit(values, {\n          ...actions,\n          props: this.props,\n        });\n      };\n\n      /**\n       * Just avoiding a render callback for perf here\n       */\n      renderFormComponent = (formikProps: FormikProps<Values>) => {\n        return <Component {...this.props} {...formikProps} />;\n      };\n\n      render() {\n        const { children, ...props } = this.props as any;\n        return (\n          <Formik\n            {...props}\n            {...config}\n            validate={config.validate && this.validate}\n            validationSchema={config.validationSchema && this.validationSchema}\n            initialValues={mapPropsToValues(this.props)}\n            initialStatus={\n              config.mapPropsToStatus && config.mapPropsToStatus(this.props)\n            }\n            initialErrors={\n              config.mapPropsToErrors && config.mapPropsToErrors(this.props)\n            }\n            initialTouched={\n              config.mapPropsToTouched && config.mapPropsToTouched(this.props)\n            }\n            onSubmit={this.handleSubmit as any}\n            children={this.renderFormComponent}\n          />\n        );\n      }\n    }\n\n    return hoistNonReactStatics(\n      C,\n      Component as React.ComponentClass<OuterProps & FormikProps<Values>> // cast type to ComponentClass (even if SFC)\n    ) as React.ComponentClass<OuterProps>;\n  };\n}\n","import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport { FormikContextType } from './types';\nimport { FormikConsumer } from './FormikContext';\nimport invariant from 'tiny-warning';\n\n/**\n * Connect any component to Formik context, and inject as a prop called `formik`;\n * @param Comp React Component\n */\nexport function connect<OuterProps, Values = {}>(\n  Comp: React.ComponentType<OuterProps & { formik: FormikContextType<Values> }>\n) {\n  const C: React.SFC<OuterProps> = (props: OuterProps) => (\n    <FormikConsumer>\n      {formik => {\n        invariant(\n          !!formik,\n          `Formik context is undefined, please verify you are rendering <Form>, <Field>, <FastField>, <FieldArray>, or your custom context-using component as a child of a <Formik> component. Component name: ${Comp.name}`\n        );\n        return <Comp {...props} formik={formik} />;\n      }}\n    </FormikConsumer>\n  );\n  const componentDisplayName =\n    Comp.displayName ||\n    Comp.name ||\n    (Comp.constructor && Comp.constructor.name) ||\n    'Component';\n\n  // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n  (C as React.SFC<OuterProps> & {\n    WrappedComponent: React.ReactNode;\n  }).WrappedComponent = Comp;\n\n  C.displayName = `FormikConnect(${componentDisplayName})`;\n\n  return hoistNonReactStatics(\n    C,\n    Comp as React.ComponentClass<\n      OuterProps & { formik: FormikContextType<Values> }\n    > // cast type to ComponentClass (even if SFC)\n  ) as React.ComponentType<OuterProps>;\n}\n","import * as React from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { connect } from './connect';\nimport {\n  FormikContextType,\n  FormikState,\n  SharedRenderProps,\n  FormikProps,\n} from './types';\nimport { getIn, isEmptyChildren, isFunction, setIn } from './utils';\n\nexport type FieldArrayRenderProps = ArrayHelpers & {\n  form: FormikProps<any>;\n  name: string;\n};\n\nexport type FieldArrayConfig = {\n  /** Really the path to the array field to be updated */\n  name: string;\n  /** Should field array validate the form AFTER array updates/changes? */\n  validateOnChange?: boolean;\n} & SharedRenderProps<FieldArrayRenderProps>;\nexport interface ArrayHelpers {\n  /** Imperatively add a value to the end of an array */\n  push: (obj: any) => void;\n  /** Curried fn to add a value to the end of an array */\n  handlePush: (obj: any) => () => void;\n  /** Imperatively swap two values in an array */\n  swap: (indexA: number, indexB: number) => void;\n  /** Curried fn to swap two values in an array */\n  handleSwap: (indexA: number, indexB: number) => () => void;\n  /** Imperatively move an element in an array to another index */\n  move: (from: number, to: number) => void;\n  /** Imperatively move an element in an array to another index */\n  handleMove: (from: number, to: number) => () => void;\n  /** Imperatively insert an element at a given index into the array */\n  insert: (index: number, value: any) => void;\n  /** Curried fn to insert an element at a given index into the array */\n  handleInsert: (index: number, value: any) => () => void;\n  /** Imperatively replace a value at an index of an array  */\n  replace: (index: number, value: any) => void;\n  /** Curried fn to replace an element at a given index into the array */\n  handleReplace: (index: number, value: any) => () => void;\n  /** Imperatively add an element to the beginning of an array and return its length */\n  unshift: (value: any) => number;\n  /** Curried fn to add an element to the beginning of an array */\n  handleUnshift: (value: any) => () => void;\n  /** Curried fn to remove an element at an index of an array */\n  handleRemove: (index: number) => () => void;\n  /** Curried fn to remove a value from the end of the array */\n  handlePop: () => () => void;\n  /** Imperatively remove and element at an index of an array */\n  remove<T>(index: number): T | undefined;\n  /** Imperatively remove and return value from the end of the array */\n  pop<T>(): T | undefined;\n}\n\n/**\n * Some array helpers!\n */\nexport const move = (array: any[], from: number, to: number) => {\n  const copy = copyArrayLike(array);\n  const value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\n\nexport const swap = (\n  arrayLike: ArrayLike<any>,\n  indexA: number,\n  indexB: number\n) => {\n  const copy = copyArrayLike(arrayLike);\n  const a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\n\nexport const insert = (\n  arrayLike: ArrayLike<any>,\n  index: number,\n  value: any\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy.splice(index, 0, value);\n  return copy;\n};\n\nexport const replace = (\n  arrayLike: ArrayLike<any>,\n  index: number,\n  value: any\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy[index] = value;\n  return copy;\n};\n\nconst copyArrayLike = (arrayLike: ArrayLike<any>) => {\n  if (!arrayLike) {\n    return [];\n  } else if (Array.isArray(arrayLike)) {\n    return [...arrayLike];\n  } else {\n    const maxIndex = Object.keys(arrayLike)\n      .map(key => parseInt(key))\n      .reduce((max, el) => (el > max ? el : max), 0);\n    return Array.from({ ...arrayLike, length: maxIndex + 1 });\n  }\n};\n\nclass FieldArrayInner<Values = {}> extends React.Component<\n  FieldArrayConfig & { formik: FormikContextType<Values> },\n  {}\n> {\n  static defaultProps = {\n    validateOnChange: true,\n  };\n\n  constructor(props: FieldArrayConfig & { formik: FormikContextType<Values> }) {\n    super(props);\n    // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n    this.remove = this.remove.bind(this) as any;\n    this.pop = this.pop.bind(this) as any;\n  }\n\n  updateArrayField = (\n    fn: Function,\n    alterTouched: boolean | Function,\n    alterErrors: boolean | Function\n  ) => {\n    const {\n      name,\n      validateOnChange,\n      formik: { setFormikState, validateForm },\n    } = this.props;\n    setFormikState(\n      (prevState: FormikState<any>) => {\n        let updateErrors = typeof alterErrors === 'function' ? alterErrors : fn;\n        let updateTouched =\n          typeof alterTouched === 'function' ? alterTouched : fn;\n\n        return {\n          ...prevState,\n          values: setIn(\n            prevState.values,\n            name,\n            fn(getIn(prevState.values, name))\n          ),\n          errors: alterErrors\n            ? setIn(\n                prevState.errors,\n                name,\n                updateErrors(getIn(prevState.errors, name))\n              )\n            : prevState.errors,\n          touched: alterTouched\n            ? setIn(\n                prevState.touched,\n                name,\n                updateTouched(getIn(prevState.touched, name))\n              )\n            : prevState.touched,\n        };\n      },\n      () => {\n        if (validateOnChange) {\n          validateForm();\n        }\n      }\n    );\n  };\n\n  push = (value: any) =>\n    this.updateArrayField(\n      (arrayLike: ArrayLike<any>) => [\n        ...copyArrayLike(arrayLike),\n        cloneDeep(value),\n      ],\n      false,\n      false\n    );\n\n  handlePush = (value: any) => () => this.push(value);\n\n  swap = (indexA: number, indexB: number) =>\n    this.updateArrayField(\n      (array: any[]) => swap(array, indexA, indexB),\n      true,\n      true\n    );\n\n  handleSwap = (indexA: number, indexB: number) => () =>\n    this.swap(indexA, indexB);\n\n  move = (from: number, to: number) =>\n    this.updateArrayField((array: any[]) => move(array, from, to), true, true);\n\n  handleMove = (from: number, to: number) => () => this.move(from, to);\n\n  insert = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => insert(array, index, value),\n      (array: any[]) => insert(array, index, null),\n      (array: any[]) => insert(array, index, null)\n    );\n\n  handleInsert = (index: number, value: any) => () => this.insert(index, value);\n\n  replace = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => replace(array, index, value),\n      false,\n      false\n    );\n\n  handleReplace = (index: number, value: any) => () =>\n    this.replace(index, value);\n\n  unshift = (value: any) => {\n    let length = -1;\n    this.updateArrayField(\n      (array: any[]) => {\n        const arr = array ? [value, ...array] : [value];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      }\n    );\n    return length;\n  };\n\n  handleUnshift = (value: any) => () => this.unshift(value);\n\n  remove<T>(index: number): T {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array?: any[]) => {\n        const copy = array ? copyArrayLike(array) : [];\n        if (!result) {\n          result = copy[index];\n        }\n        if (isFunction(copy.splice)) {\n          copy.splice(index, 1);\n        }\n        return copy;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handleRemove = (index: number) => () => this.remove<any>(index);\n\n  pop<T>(): T {\n    // Remove relevant pieces of `touched` and `errors` too!\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array: any[]) => {\n        const tmp = array;\n        if (!result) {\n          result = tmp && tmp.pop && tmp.pop();\n        }\n        return tmp;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handlePop = () => () => this.pop<any>();\n\n  render() {\n    const arrayHelpers: ArrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove,\n    };\n\n    const {\n      component,\n      render,\n      children,\n      name,\n      formik: {\n        validate: _validate,\n        validationSchema: _validationSchema,\n        ...restOfFormik\n      },\n    } = this.props;\n\n    const props: FieldArrayRenderProps = {\n      ...arrayHelpers,\n      form: restOfFormik,\n      name,\n    };\n\n    return component\n      ? React.createElement(component as any, props)\n      : render\n      ? (render as any)(props)\n      : children // children come last, always called\n      ? typeof children === 'function'\n        ? (children as any)(props)\n        : !isEmptyChildren(children)\n        ? React.Children.only(children)\n        : null\n      : null;\n  }\n}\n\nexport const FieldArray = connect<FieldArrayConfig, any>(FieldArrayInner);\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport { getIn, isFunction } from './utils';\nimport { connect } from './connect';\n\nexport interface ErrorMessageProps {\n  name: string;\n  className?: string;\n  component?: string | React.ComponentType;\n  children?: (errorMessage: string) => React.ReactNode;\n  render?: (errorMessage: string) => React.ReactNode;\n}\n\nclass ErrorMessageImpl extends React.Component<\n  ErrorMessageProps & { formik: FormikContextType<any> }\n> {\n  shouldComponentUpdate(\n    props: ErrorMessageProps & { formik: FormikContextType<any> }\n  ) {\n    if (\n      getIn(this.props.formik.errors, this.props.name) !==\n        getIn(props.formik.errors, this.props.name) ||\n      getIn(this.props.formik.touched, this.props.name) !==\n        getIn(props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    let { component, formik, render, children, name, ...rest } = this.props;\n\n    const touch = getIn(formik.touched, name);\n    const error = getIn(formik.errors, name);\n\n    return !!touch && !!error\n      ? render\n        ? isFunction(render)\n          ? render(error)\n          : null\n        : children\n        ? isFunction(children)\n          ? children(error)\n          : null\n        : component\n        ? React.createElement(component, rest as any, error)\n        : error\n      : null;\n  }\n}\n\nexport const ErrorMessage = connect<\n  ErrorMessageProps,\n  ErrorMessageProps & { formik: FormikContextType<any> }\n>(ErrorMessageImpl);\n","import * as React from 'react';\n\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FormikContextType,\n  FieldMetaProps,\n  FieldInputProps,\n} from './types';\nimport invariant from 'tiny-warning';\nimport { getIn, isEmptyChildren, isFunction } from './utils';\nimport { FieldConfig } from './Field';\nimport { connect } from './connect';\n\ntype $FixMe = any;\n\nexport interface FastFieldProps<V = any> {\n  field: FieldInputProps<V>;\n  meta: FieldMetaProps<V>;\n  form: FormikProps<V>; // if ppl want to restrict this for a given form, let them.\n}\n\nexport type FastFieldConfig<T> = FieldConfig & {\n  /** Override FastField's default shouldComponentUpdate */\n  shouldUpdate?: (\n    nextProps: T & GenericFieldHTMLAttributes,\n    props: {}\n  ) => boolean;\n};\n\nexport type FastFieldAttributes<T> = GenericFieldHTMLAttributes &\n  FastFieldConfig<T> &\n  T;\n\ntype FastFieldInnerProps<Values = {}, Props = {}> = FastFieldAttributes<\n  Props\n> & { formik: FormikContextType<Values> };\n\n/**\n * Custom Field component for quickly hooking into Formik\n * context and wiring up forms.\n */\nclass FastFieldInner<Values = {}, Props = {}> extends React.Component<\n  FastFieldInnerProps<Values, Props>,\n  {}\n> {\n  constructor(props: FastFieldInnerProps<Values, Props>) {\n    super(props);\n    const { render, children, component, as: is, name } = props;\n    invariant(\n      !render,\n      `<FastField render> has been deprecated. Please use a child callback function instead: <FastField name={${name}}>{props => ...}</FastField> instead.`\n    );\n    invariant(\n      !(component && render),\n      'You should not use <FastField component> and <FastField render> in the same <FastField> component; <FastField component> will be ignored'\n    );\n\n    invariant(\n      !(is && children && isFunction(children)),\n      'You should not use <FastField as> and <FastField children> as a function in the same <FastField> component; <FastField as> will be ignored.'\n    );\n\n    invariant(\n      !(component && children && isFunction(children)),\n      'You should not use <FastField component> and <FastField children> as a function in the same <FastField> component; <FastField component> will be ignored.'\n    );\n\n    invariant(\n      !(render && children && !isEmptyChildren(children)),\n      'You should not use <FastField render> and <FastField children> in the same <FastField> component; <FastField children> will be ignored'\n    );\n  }\n\n  shouldComponentUpdate(props: FastFieldInnerProps<Values, Props>) {\n    if (this.props.shouldUpdate) {\n      return this.props.shouldUpdate(props, this.props);\n    } else if (\n      props.name !== this.props.name ||\n      getIn(props.formik.values, this.props.name) !==\n        getIn(this.props.formik.values, this.props.name) ||\n      getIn(props.formik.errors, this.props.name) !==\n        getIn(this.props.formik.errors, this.props.name) ||\n      getIn(props.formik.touched, this.props.name) !==\n        getIn(this.props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length ||\n      props.formik.isSubmitting !== this.props.formik.isSubmitting\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentDidMount() {\n    // Register the Field with the parent Formik. Parent will cycle through\n    // registered Field's validate fns right prior to submit\n    this.props.formik.registerField(this.props.name, {\n      validate: this.props.validate,\n    });\n  }\n\n  componentDidUpdate(prevProps: FastFieldAttributes<Props>) {\n    if (this.props.name !== prevProps.name) {\n      this.props.formik.unregisterField(prevProps.name);\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n\n    if (this.props.validate !== prevProps.validate) {\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.formik.unregisterField(this.props.name);\n  }\n\n  render() {\n    const {\n      validate,\n      name,\n      render,\n      as: is,\n      children,\n      component,\n      shouldUpdate,\n      formik,\n      ...props\n    } = this.props as FastFieldInnerProps<Values, Props>;\n\n    const {\n      validate: _validate,\n      validationSchema: _validationSchema,\n      ...restOfFormik\n    } = formik;\n    const field = {\n      value:\n        props.type === 'radio' || props.type === 'checkbox'\n          ? props.value // React uses checked={} for these inputs\n          : getIn(formik.values, name),\n      name,\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n    };\n    const meta = {\n      value: getIn(formik.values, name),\n      error: getIn(formik.errors, name),\n      touched: !!getIn(formik.touched, name),\n      initialValue: getIn(formik.initialValues, name),\n      initialTouched: !!getIn(formik.initialTouched, name),\n      initialError: getIn(formik.initialErrors, name),\n    };\n\n    const bag = { field, meta, form: restOfFormik };\n\n    if (render) {\n      return (render as any)(bag);\n    }\n\n    if (isFunction(children)) {\n      return (children as (props: FastFieldProps<any>) => React.ReactNode)(bag);\n    }\n\n    if (component) {\n      // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n      if (typeof component === 'string') {\n        const { innerRef, ...rest } = props;\n        return React.createElement(\n          component,\n          { ref: innerRef, ...field, ...(rest as $FixMe) },\n          children\n        );\n      }\n      // We don't pass `meta` for backwards compat\n      return React.createElement(\n        component as React.ComponentClass<$FixMe>,\n        { field, form: formik, ...props },\n        children\n      );\n    }\n\n    // default to input here so we can check for both `as` and `children` above\n    const asElement = is || 'input';\n\n    if (typeof asElement === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        asElement,\n        { ref: innerRef, ...field, ...(rest as $FixMe) },\n        children\n      );\n    }\n\n    return React.createElement(\n      asElement as React.ComponentClass,\n      { ...field, ...props },\n      children\n    );\n  }\n}\n\nexport const FastField = connect<FastFieldAttributes<any>, any>(FastFieldInner);\n"],"names":["isEmptyArray","value","Array","isArray","length","isFunction","obj","isObject","isInteger","String","Math","floor","Number","isString","Object","prototype","toString","call","isNaN","isEmptyChildren","children","React","count","isPromise","then","isInputEvent","target","getActiveElement","doc","document","undefined","activeElement","body","e","getIn","key","def","p","path","toPath","setIn","res","clone","resVal","i","pathArray","currentPath","currentObj","slice","nextPath","setNestedObjectValues","object","visited","response","WeakMap","keys","k","val","get","set","FormikContext","FormikProvider","Provider","FormikConsumer","Consumer","useFormikContext","formik","invariant","formikReducer","state","msg","type","values","payload","touched","isEqual","errors","status","isSubmitting","isValidating","field","submitCount","emptyErrors","emptyTouched","useFormik","validateOnChange","validateOnBlur","validateOnMount","isInitialValid","enableReinitialize","onSubmit","rest","props","initialValues","initialErrors","initialTouched","initialStatus","isMounted","fieldRegistry","current","dispatch","runValidateHandler","Promise","resolve","reject","maybePromisedErrors","validate","actualException","console","warn","runValidationSchema","validationSchema","schema","promise","validateAt","validateYupSchema","err","name","yupToFormErrors","runSingleFieldLevelValidation","runFieldLevelValidations","fieldKeysWithValidation","filter","f","fieldValidations","map","all","fieldErrorsList","reduce","prev","curr","index","runAllValidations","fieldErrors","schemaErrors","validateErrors","combinedErrors","deepmerge","arrayMerge","validateFormWithLowPriority","useEventCallback","unstable_runWithPriority","LowPriority","validateFormWithHighPriority","resetForm","nextState","validateField","maybePromise","x","error","registerField","unregisterField","setTouched","setErrors","setValues","setFieldError","setFieldValue","shouldValidate","executeChange","eventOrTextValue","maybePath","parsed","persist","currentTarget","id","checked","outerHTML","options","multiple","warnAboutMissingIdentifier","htmlContent","documentationAnchorLink","handlerName","test","parseFloat","getValueForCheckbox","getSelectedValues","handleChange","eventOrPath","event","setFieldTouched","executeBlur","handleBlur","eventOrString","setFormikState","stateOrCb","setStatus","setSubmitting","imperativeMethods","validateForm","executeSubmit","submitForm","isActuallyValid","promiseOrUndefined","_errors","handleSubmit","preventDefault","stopPropagation","HTMLButtonElement","attributes","getNamedItem","handleReset","onReset","maybePromisedOnReset","getFieldMeta","initialValue","initialError","getFieldProps","nameOrOptions","isAnObject","valueState","onChange","onBlur","valueProp","is","as","indexOf","dirty","isValid","ctx","Formik","formikbag","component","render","only","yupError","inner","message","sync","context","validateData","prepareDataForValidation","abortEarly","data","hasOwnProperty","isPlainObject","source","destination","forEach","cloneRequested","shouldClone","isMergeableObject","push","from","el","selected","currentValue","concat","useIsomorphicLayoutEffect","window","createElement","fn","ref","args","apply","useField","propsOrFieldName","fieldName","validateFn","Field","_validate","_validationSchema","meta","legacyBag","form","innerRef","asElement","Form","action","_action","displayName","withFormik","mapPropsToValues","vanillaProps","config","createFormik","Component","componentDisplayName","constructor","C","actions","formikProps","mapPropsToStatus","mapPropsToErrors","mapPropsToTouched","renderFormComponent","hoistNonReactStatics","connect","Comp","WrappedComponent","move","array","to","copy","copyArrayLike","splice","swap","arrayLike","indexA","indexB","a","insert","replace","maxIndex","parseInt","max","FieldArrayInner","alterTouched","alterErrors","prevState","updateErrors","updateTouched","updateArrayField","cloneDeep","arr","unshift","remove","pop","bind","result","tmp","arrayHelpers","handlePush","handlePop","handleSwap","handleMove","handleInsert","handleReplace","handleUnshift","handleRemove","restOfFormik","FieldArray","ErrorMessageImpl","shouldComponentUpdate","touch","ErrorMessage","FastFieldInner","shouldUpdate","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","bag","FastField"],"mappings":"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"}