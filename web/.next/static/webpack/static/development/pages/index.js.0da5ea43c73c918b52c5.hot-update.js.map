{"version":3,"file":"static/webpack/static/development/pages/index.js.0da5ea43c73c918b52c5.hot-update.js","sources":["webpack:///./components/partials/Layout.js","webpack:///./components/partials/Layout.module.css?cec6","webpack:///./components/uniswap.js","webpack:///./components/partials/Layout.module.css"],"sourcesContent":["import Head from \"next/head\";\nimport styles from \"./Layout.module.css\";\n\nexport const siteTitle = \"Cadencia - Open Data Insights for Decentralized Web\";\n\nexport default function Layout({ children, home }) {\n  return (\n    <div className={styles.container}>\n      <Head>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <meta name=\"Open Data for Decentralized Financial Markets\" />\n        <meta\n          property=\"og:image\"\n          content={`https://og-image.now.sh/${encodeURI(\n            siteTitle\n          )}.png?theme=light&md=0&fontSize=75px&images=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Ffront%2Fassets%2Fdesign%2Fnextjs-black-logo.svg`}\n        />\n        <meta name=\"og:title\" content={siteTitle} />\n      </Head>\n\n      <main>{children}</main>\n    </div>\n  );\n}\n","var content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-2-1!../../node_modules/next/dist/compiled/postcss-loader/index.js??__nextjs_postcss!./Layout.module.css\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = function(element){// These elements should always exist. If they do not,\n// this code should fail.\nvar anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>\n// Each style tag should be placed right before our\n// anchor. By inserting before and not after, we do not\n// need to track the last inserted element.\nparentNode.insertBefore(element,anchorElement)// Remember: this is development only code.\n//\n// After styles are injected, we need to remove the\n// <style> tags that set `body { display: none; }`.\n//\n// We use `requestAnimationFrame` as a way to defer\n// this operation since there may be multiple style\n// tags.\n;(self.requestAnimationFrame||setTimeout)(function(){for(var x=document.querySelectorAll('[data-next-hide-fouc]'),i=x.length;i--;){x[i].parentNode.removeChild(x[i]);}});};\noptions.singleton = false;\n\nvar update = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-2-1!../../node_modules/next/dist/compiled/postcss-loader/index.js??__nextjs_postcss!./Layout.module.css\",\n      function () {\n        var newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-2-1!../../node_modules/next/dist/compiled/postcss-loader/index.js??__nextjs_postcss!./Layout.module.css\");\n\n        if (typeof newContent === 'string') {\n          newContent = [[module.id, newContent, '']];\n        }\n        \n        update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}","import { gql, useQuery, NetworkStatus } from \"@apollo/client\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport Layout from \"./partials/Layout\";\n\nexport const UNISWAP_QUERY = gql`\n  query {\n    tokens(\n      orderBy: txCount\n      orderDirection: desc\n      first: 4\n      where: { txCount_gt: 3000 }\n    ) {\n      id\n      symbol\n      name\n      txCount\n    }\n  }\n`;\n\nexport const uniswapQueryVars = {\n  first: 10,\n};\n\nexport default function UniswapList() {\n  const { loading, error, data, fetchMore, networkStatus } = useQuery(\n    UNISWAP_QUERY,\n    {\n      variables: uniswapQueryVars,\n      // Setting this value to true will make the component rerender when\n      // the \"networkStatus\" changes, so we are able to know if it is fetching\n      // more data\n      notifyOnNetworkStatusChange: true,\n      context: { clientName: \"uniswap\" },\n    }\n  );\n\n  const loadingMorePosts = networkStatus === NetworkStatus.fetchMore;\n\n  const loadMorePosts = () => {\n    fetchMore({\n      variables: {\n        skip: tokens.length,\n      },\n    });\n  };\n\n  if (error) return <p> Error</p>;\n  if (loading && !loadingMorePosts) return <div>Loading</div>;\n\n  const { tokens } = data;\n  let keys = [];\n\n  tokens.map((t, i) => keys.push(parseInt(t.tradeVolume)));\n  console.log(keys);\n  return (\n    <>\n      <div style={{ marginTop: \"2rem\" }}>\n        <h1 style={{ marginTop: \"1rem\" }}>Top Swapped Tokens (TxCount)</h1>\n        <BarChart\n          instanceId=\"uniswapChart\"\n          width={900}\n          height={600}\n          data={tokens}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 80,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"5 5\" />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"txCount\" fill=\"#7865cb\" fillOpacity=\"1\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis domain={[0, 3000000]} dataKey=\"txCount\" />\n        </BarChart>\n      </div>\n    </>\n  );\n}\n","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(true);\n// Module\nexports.push([module.id, \".Layout_container__33NKd {\\n  max-width: 59rem;\\n  padding: 0 1rem;\\n  margin: 3rem auto 6rem;\\n}\\n\\n.Layout_heading__2gcHA {\\n  font-family: \\\"Arial\\\";\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"/Users/studiopreza/Desktop/cadencia/cadencia/web/components/partials/Layout.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,gBAAgB;EAChB,eAAe;EACf,sBAAsB;AACxB;;AAEA;EACE,oBAAoB;AACtB\",\"file\":\"Layout.module.css\",\"sourcesContent\":[\".container {\\n  max-width: 59rem;\\n  padding: 0 1rem;\\n  margin: 3rem auto 6rem;\\n}\\n\\n.heading {\\n  font-family: \\\"Arial\\\";\\n}\\n\"]}]);\n// Exports\nexports.locals = {\n\t\"container\": \"Layout_container__33NKd\",\n\t\"heading\": \"Layout_heading__2gcHA\"\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AASA;AAEA;AAgBA;AACA;AADA;AAIA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAHA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBA;AA2BA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}