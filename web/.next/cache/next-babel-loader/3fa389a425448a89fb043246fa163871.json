{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/studiopreza/Desktop/cadencia/cadencia/components/auth/Register.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Formik, Field } from \"formik\";\nimport { Button } from \"../antd\";\nimport * as Yup from \"yup\";\nimport styles from \"./auth.module.css\";\nimport InputField from \"./InputField\";\nexport var RegisterForm = function RegisterForm(props) {\n  var _props$value = props.value,\n      value = _props$value === void 0 ? \"\" : _props$value,\n      errors = props.errors,\n      handleChange = props.handleChange,\n      handleSubmit = props.handleSubmit;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: styles.pageWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: styles.formPageHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Welcome back!\"), function (handleSubmit) {\n    return __jsx(Formik, {\n      onSubmit: function _callee(data) {\n        var response;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(register({\n                  variables: {\n                    data: data\n                  }\n                }));\n\n              case 2:\n                response = _context.sent;\n                console.log(response);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      initialValues: {\n        email: \"\",\n        confirmPassword: \"\",\n        password: \"\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      className: styles.formWrapper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      style: {\n        display: \"block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, \"Email\"), __jsx(Field, {\n      component: InputField,\n      name: \"email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"password\",\n      style: {\n        display: \"block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, \"Password\"), __jsx(Field, {\n      component: InputField,\n      name: \"password\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"confirmPassword\",\n      style: {\n        display: \"block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, \"Confirm Password\"), __jsx(Field, {\n      component: InputField,\n      name: \"confirmPassword\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }), __jsx(Button, {\n      className: styles.submitButton,\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, \"Create Account\")));\n  }));\n};\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/studiopreza/Desktop/cadencia/cadencia/components/auth/Register.js"],"names":["Formik","Field","Button","Yup","styles","InputField","RegisterForm","props","value","errors","handleChange","handleSubmit","pageWrapper","formPageHeader","data","register","variables","response","console","log","email","confirmPassword","password","formWrapper","display","submitButton"],"mappings":"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","sourcesContent":["import { Formik, Field } from \"formik\";\nimport { Button } from \"../antd\";\nimport * as Yup from \"yup\";\nimport styles from \"./auth.module.css\";\nimport InputField from \"./InputField\";\n\nexport const RegisterForm = (props) => {\n  const { value = \"\", errors, handleChange, handleSubmit } = props;\n\n  return (\n    <>\n      <div className={styles.pageWrapper}>\n        <h1 className={styles.formPageHeader}>Welcome back!</h1>\n\n        {(handleSubmit) => (\n          <Formik\n            onSubmit={async (data) => {\n              const response = await register({\n                variables: {\n                  data,\n                },\n              });\n              console.log(response);\n            }}\n            initialValues={{\n              email: \"\",\n              confirmPassword: \"\",\n              password: \"\",\n            }}\n          >\n            <form onSubmit={handleSubmit} className={styles.formWrapper}>\n              <label htmlFor=\"email\" style={{ display: \"block\" }}>\n                Email\n              </label>\n              <Field component={InputField} name=\"email\" />\n\n              <label htmlFor=\"password\" style={{ display: \"block\" }}>\n                Password\n              </label>\n              <Field component={InputField} name=\"password\" type=\"password\" />\n\n              <label htmlFor=\"confirmPassword\" style={{ display: \"block\" }}>\n                Confirm Password\n              </label>\n              <Field\n                component={InputField}\n                name=\"confirmPassword\"\n                type=\"password\"\n              />\n              <Button className={styles.submitButton} type=\"submit\">\n                Create Account\n              </Button>\n            </form>\n          </Formik>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}