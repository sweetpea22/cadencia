{"ast":null,"code":"var _jsxFileName = \"/Users/studiopreza/Desktop/cadencia/cadencia/components/MapComp.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Map, TileLayer, LayersControl, LayerGroup, Marker, Tooltip } from \"react-leaflet\";\nimport { peers } from \"../lib/peers\";\nexport default function MapComp(props) {\n  var _this = this;\n\n  var iconStyle = L.divIcon({\n    className: \"mapIcon\"\n  });\n  return __jsx(Map, {\n    center: [51.505, -0.09],\n    zoom: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), __jsx(LayersControl, {\n    position: \"topright\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, peers.map(function (peer) {\n    return __jsx(LayersControl.Overlay, {\n      key: peer.client.type,\n      checked: true,\n      name: peer.client.type,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, __jsx(LayerGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, peers.map(function (peer) {\n      return __jsx(Marker, {\n        key: peer.peerId,\n        position: [peer.location.Lat, peer.location.Lon],\n        icon: iconStyle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, __jsx(Tooltip, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }\n      }, \"Using \".concat(peer.client.type, \" v.\").concat(peer.client.version, \" From \").concat(peer.city)));\n    })));\n  })));\n}","map":{"version":3,"sources":["/Users/studiopreza/Desktop/cadencia/cadencia/components/MapComp.js"],"names":["Map","TileLayer","LayersControl","LayerGroup","Marker","Tooltip","peers","MapComp","props","iconStyle","L","divIcon","className","map","peer","client","type","peerId","location","Lat","Lon","version","city"],"mappings":";;;AAAA,SACEA,GADF,EAEEC,SAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,MALF,EAMEC,OANF,QAOO,eAPP;AAQA,SAASC,KAAT,QAAsB,cAAtB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC,MAAMC,SAAS,GAAGC,CAAC,CAACC,OAAF,CAAU;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAV,CAAlB;AAEA,SACE,MAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,MAAD,EAAS,CAAC,IAAV,CAAb;AAA8B,IAAA,IAAI,EAAE,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,WAAW,EAAC,2EADd;AAEE,IAAA,GAAG,EAAC,oDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,MAAC,aAAD;AAAe,IAAA,QAAQ,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACO,GAAN,CAAU,UAACC,IAAD;AAAA,WACT,MAAC,aAAD,CAAe,OAAf;AACE,MAAA,GAAG,EAAEA,IAAI,CAACC,MAAL,CAAYC,IADnB;AAEE,MAAA,OAAO,MAFT;AAGE,MAAA,IAAI,EAAEF,IAAI,CAACC,MAAL,CAAYC,IAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,KAAK,CAACO,GAAN,CAAU,UAACC,IAAD;AAAA,aACT,MAAC,MAAD;AACE,QAAA,GAAG,EAAEA,IAAI,CAACG,MADZ;AAEE,QAAA,QAAQ,EAAE,CAACH,IAAI,CAACI,QAAL,CAAcC,GAAf,EAAoBL,IAAI,CAACI,QAAL,CAAcE,GAAlC,CAFZ;AAGE,QAAA,IAAI,EAAEX,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmBK,IAAI,CAACC,MAAL,CAAYC,IAA/B,gBAAyCF,IAAI,CAACC,MAAL,CAAYM,OAArD,mBAAqEP,IAAI,CAACQ,IAA1E,EALF,CADS;AAAA,KAAV,CADH,CALF,CADS;AAAA,GAAV,CADH,CALF,CADF;AA6BD","sourcesContent":["import {\n  Map,\n  TileLayer,\n  LayersControl,\n  LayerGroup,\n  Marker,\n  Tooltip,\n} from \"react-leaflet\";\nimport { peers } from \"../lib/peers\";\n\nexport default function MapComp(props) {\n  const iconStyle = L.divIcon({ className: \"mapIcon\" });\n\n  return (\n    <Map center={[51.505, -0.09]} zoom={2}>\n      <TileLayer\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <LayersControl position=\"topright\">\n        {peers.map((peer) => (\n          <LayersControl.Overlay\n            key={peer.client.type}\n            checked\n            name={peer.client.type}\n          >\n            <LayerGroup>\n              {peers.map((peer) => (\n                <Marker\n                  key={peer.peerId}\n                  position={[peer.location.Lat, peer.location.Lon]}\n                  icon={iconStyle}\n                >\n                  <Tooltip>{`Using ${peer.client.type} v.${peer.client.version} From ${peer.city}`}</Tooltip>\n                </Marker>\n              ))}\n            </LayerGroup>\n          </LayersControl.Overlay>\n        ))}\n      </LayersControl>\n    </Map>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}