{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/studiopreza/Desktop/cadencia/cadencia/components/auth/Login.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nexport var LoginInputs = function LoginInputs(props) {\n  var values = props.values,\n      touched = props.touched,\n      errors = props.errors,\n      dirty = props.dirty,\n      isSubmitting = props.isSubmitting,\n      handleChange = props.handleChange,\n      handleBlur = props.handleBlur,\n      handleSubmit = props.handleSubmit;\n  return __jsx(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    onSubmit: function _callee(values) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(new Promise(function (resolve) {\n                return setTimeout(resolve, 500);\n              }));\n\n            case 2:\n              alert(JSON.stringify(values, null, 2));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().required(\"Required\")\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    style: {\n      display: \"block\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    id: \"email\",\n    placeholder: \"Enter your email\",\n    type: \"text\",\n    value: values.email,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.email && touched.email ? \"text-input error\" : \"text-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), errors.email && touched.email && __jsx(\"div\", {\n    className: \"input-feedback\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, errors.email), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Login\")), __jsx(LoginInputs, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }));\n};\nexport default LoginForm;","map":{"version":3,"sources":["/Users/studiopreza/Desktop/cadencia/cadencia/components/auth/Login.js"],"names":["Formik","Yup","LoginInputs","props","values","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","email","Promise","resolve","setTimeout","alert","JSON","stringify","object","shape","string","required","display","LoginForm"],"mappings":";;;;;;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,MAElCC,MAFkC,GAUhCD,KAVgC,CAElCC,MAFkC;AAAA,MAGlCC,OAHkC,GAUhCF,KAVgC,CAGlCE,OAHkC;AAAA,MAIlCC,MAJkC,GAUhCH,KAVgC,CAIlCG,MAJkC;AAAA,MAKlCC,KALkC,GAUhCJ,KAVgC,CAKlCI,KALkC;AAAA,MAMlCC,YANkC,GAUhCL,KAVgC,CAMlCK,YANkC;AAAA,MAOlCC,YAPkC,GAUhCN,KAVgC,CAOlCM,YAPkC;AAAA,MAQlCC,UARkC,GAUhCP,KAVgC,CAQlCO,UARkC;AAAA,MASlCC,YATkC,GAUhCR,KAVgC,CASlCQ,YATkC;AAWpC,SACE,MAAC,MAAD;AACA,IAAA,aAAa,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADf;AAEA,IAAA,QAAQ,EAAE,iBAAOR,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACF,IAAIS,OAAJ,CAAY,UAACC,OAAD;AAAA,uBAAaC,UAAU,CAACD,OAAD,EAAU,GAAV,CAAvB;AAAA,eAAZ,CADE;;AAAA;AAERE,cAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAed,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFV;AAMA,IAAA,gBAAgB,EAAEH,GAAG,CAACkB,MAAJ,GAAaC,KAAb,CAAmB;AACnCR,MAAAA,KAAK,EAAEX,GAAG,CAACoB,MAAJ,GAAaT,KAAb,GAAqBU,QAArB,CAA8B,UAA9B;AAD4B,KAAnB,CANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUA;AAAM,IAAA,QAAQ,EAAEX,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAAEY,MAAAA,OAAO,EAAE;AAAX,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEnB,MAAM,CAACQ,KAJhB;AAKE,IAAA,QAAQ,EAAEH,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAOE,IAAA,SAAS,EACPJ,MAAM,CAACM,KAAP,IAAgBP,OAAO,CAACO,KAAxB,GAAgC,kBAAhC,GAAqD,YARzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAeGN,MAAM,CAACM,KAAP,IAAgBP,OAAO,CAACO,KAAxB,IACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCN,MAAM,CAACM,KAAxC,CAhBJ,EAmBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEJ,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnBF,CAVA,EAiCA,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCA,CADF;AAqCD,CAhDM;AAmDP,eAAegB,SAAf","sourcesContent":["import { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nexport const LoginInputs = (props) => {\n  const {\n    values,\n    touched,\n    errors,\n    dirty,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n  } = props;\n  return (\n    <Formik\n    initialValues={{ email: \"\" }}\n    onSubmit={async (values) => {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      alert(JSON.stringify(values, null, 2));\n    }}\n    validationSchema={Yup.object().shape({\n      email: Yup.string().email().required(\"Required\"),\n    })}\n  >\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"email\" style={{ display: \"block\" }}>\n        Email\n      </label>\n      <input\n        id=\"email\"\n        placeholder=\"Enter your email\"\n        type=\"text\"\n        value={values.email}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        className={\n          errors.email && touched.email ? \"text-input error\" : \"text-input\"\n        }\n      />\n      {errors.email && touched.email && (\n        <div className=\"input-feedback\">{errors.email}</div>\n      )}\n\n      <button type=\"submit\" disabled={isSubmitting}>\n        Login\n      </button>\n    </form>\n    <LoginInputs />\n  </Formik>\n  );\n};\n\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}