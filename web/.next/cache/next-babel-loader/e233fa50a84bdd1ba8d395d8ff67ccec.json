{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/studiopreza/Desktop/cadencia/cadencia/components/auth/Login.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nexport var LoginForm = function LoginForm(props) {\n  var _props$value = props.value,\n      value = _props$value === void 0 ? \"\" : _props$value,\n      errors = props.errors,\n      isSubmitting = props.isSubmitting,\n      handleChange = props.handleChange,\n      handleSubmit = props.handleSubmit;\n  return __jsx(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    onSubmit: function _callee(value) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(new Promise(function (resolve) {\n                return setTimeout(resolve, 500);\n              }));\n\n            case 2:\n              alert(JSON.stringify(value, null, 2));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().required(\"Required\")\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      margin: \"0 auto\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    style: {\n      display: \"block\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    id: \"email\",\n    type: \"text\",\n    value: value,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"password\",\n    style: {\n      display: \"block\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"password\"), __jsx(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    value: value,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n};\nexport default LoginForm;","map":{"version":3,"sources":["/Users/studiopreza/Desktop/cadencia/cadencia/components/auth/Login.js"],"names":["Formik","Yup","LoginForm","props","value","errors","isSubmitting","handleChange","handleSubmit","email","Promise","resolve","setTimeout","alert","JSON","stringify","object","shape","string","required","margin","display"],"mappings":";;;;;;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA,qBAO9BA,KAP8B,CAEhCC,KAFgC;AAAA,MAEhCA,KAFgC,6BAExB,EAFwB;AAAA,MAGhCC,MAHgC,GAO9BF,KAP8B,CAGhCE,MAHgC;AAAA,MAIhCC,YAJgC,GAO9BH,KAP8B,CAIhCG,YAJgC;AAAA,MAKhCC,YALgC,GAO9BJ,KAP8B,CAKhCI,YALgC;AAAA,MAMhCC,YANgC,GAO9BL,KAP8B,CAMhCK,YANgC;AASlC,SACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADjB;AAEE,IAAA,QAAQ,EAAE,iBAAOL,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACF,IAAIM,OAAJ,CAAY,UAACC,OAAD;AAAA,uBAAaC,UAAU,CAACD,OAAD,EAAU,GAAV,CAAvB;AAAA,eAAZ,CADE;;AAAA;AAERE,cAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeX,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAD,CAAL;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFZ;AAME,IAAA,gBAAgB,EAAEH,GAAG,CAACe,MAAJ,GAAaC,KAAb,CAAmB;AACnCR,MAAAA,KAAK,EAAER,GAAG,CAACiB,MAAJ,GAAaT,KAAb,GAAqBU,QAArB,CAA8B,UAA9B;AAD4B,KAAnB,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE;AAAM,IAAA,QAAQ,EAAEX,YAAhB;AAA8B,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE;AAAO,IAAA,EAAE,EAAC,OAAV;AAAkB,IAAA,IAAI,EAAC,MAAvB;AAA8B,IAAA,KAAK,EAAEjB,KAArC;AAA4C,IAAA,QAAQ,EAAEG,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EASE;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEc,MAAAA,OAAO,EAAE;AAAX,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,EAYE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEjB,KAHT;AAIE,IAAA,QAAQ,EAAEG,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAsBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAED,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAtBF,CAVF,CADF;AAuCD,CAhDM;AAkDP,eAAeJ,SAAf","sourcesContent":["import { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nexport const LoginForm = (props) => {\n  const {\n    value = \"\",\n    errors,\n    isSubmitting,\n    handleChange,\n    handleSubmit,\n  } = props;\n\n  return (\n    <Formik\n      initialValues={{ email: \"\" }}\n      onSubmit={async (value) => {\n        await new Promise((resolve) => setTimeout(resolve, 500));\n        alert(JSON.stringify(value, null, 2));\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string().email().required(\"Required\"),\n      })}\n    >\n      <form onSubmit={handleSubmit} style={{ margin: \"0 auto\" }}>\n        <label htmlFor=\"email\" style={{ display: \"block\" }}>\n          Email\n        </label>\n        <input id=\"email\" type=\"text\" value={value} onChange={handleChange} />\n        {/* {errors.email && touched.email && (\n          <div className=\"input-feedback\">{errors.email}</div>\n        )} */}\n\n        <label htmlFor=\"password\" style={{ display: \"block\" }}>\n          password\n        </label>\n        <input\n          id=\"password\"\n          type=\"password\"\n          value={value}\n          onChange={handleChange}\n        />\n        {/* {errors.password && touched.password && (\n          <div className=\"input-feedback\">{errors.password}</div>\n        )} */}\n\n        <button type=\"submit\" disabled={isSubmitting}>\n          Login\n        </button>\n      </form>\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}