{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/studiopreza/Desktop/cadencia/cadencia/web/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    hello\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\nexport var __N_SSG = true;\nexport var HELLO_QUERY = gql(_templateObject());\nexport default (function () {\n  var _useQuery = useQuery(HELLO_QUERY, {\n    notifyOnNetworkStatusChange: true\n  }),\n      data = _useQuery.data;\n\n  return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }, \"Query Response: \", data.hello);\n});","map":{"version":3,"sources":["/Users/studiopreza/Desktop/cadencia/cadencia/web/pages/index.js"],"names":["gql","useQuery","HELLO_QUERY","notifyOnNetworkStatusChange","data","hello"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;;AAGA,OAAO,IAAMC,WAAW,GAAGF,GAAH,mBAAjB;AAMP,gBAAe,YAAM;AAAA,kBACFC,QAAQ,CAACC,WAAD,EAAc;AACrCC,IAAAA,2BAA2B,EAAE;AADQ,GAAd,CADN;AAAA,MACXC,IADW,aACXA,IADW;;AAKnB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqBA,IAAI,CAACC,KAA1B,CAAP;AACD,CAND","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport { initializeApollo } from \"../lib/apolloClient\";\n\nexport const HELLO_QUERY = gql`\n  query {\n    hello\n  }\n`;\n\nexport default () => {\n  const { data } = useQuery(HELLO_QUERY, {\n    notifyOnNetworkStatusChange: true,\n  });\n\n  return <h1>Query Response: {data.hello}</h1>;\n};\n\nexport async function getStaticProps() {\n  const apolloClient = initializeApollo();\n\n  await apolloClient.query({\n    query: HELLO_QUERY,\n  });\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract(),\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}