{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/studiopreza/Desktop/cadencia/cadencia/components/auth/Login.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nexport var LoginForm = function LoginForm() {\n  return __jsx(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    onSubmit: function _callee(values) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(new Promise(function (resolve) {\n                return setTimeout(resolve, 500);\n              }));\n\n            case 2:\n              alert(JSON.stringify(values, null, 2));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().required(\"Required\")\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }, function (props) {\n    var values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        dirty = props.dirty,\n        isSubmitting = props.isSubmitting,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit;\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      style: {\n        display: \"block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, \"Email\"), __jsx(\"input\", {\n      id: \"email\",\n      placeholder: \"Enter your email\",\n      type: \"text\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.email && touched.email ? \"text-input error\" : \"text-input\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }), errors.email && touched.email && __jsx(\"div\", {\n      className: \"input-feedback\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, errors.email), __jsx(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Login\"));\n  });\n};\nexport default LoginForm;","map":{"version":3,"sources":["/Users/studiopreza/Desktop/cadencia/cadencia/components/auth/Login.js"],"names":["Formik","Yup","LoginForm","email","values","Promise","resolve","setTimeout","alert","JSON","stringify","object","shape","string","required","props","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","display"],"mappings":";;;;;;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,SACA,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADjB;AAEE,IAAA,QAAQ,EAAE,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACF,IAAIC,OAAJ,CAAY,UAACC,OAAD;AAAA,uBAAaC,UAAU,CAACD,OAAD,EAAU,GAAV,CAAvB;AAAA,eAAZ,CADE;;AAAA;AAERE,cAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeN,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFZ;AAME,IAAA,gBAAgB,EAAEH,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;AACnCT,MAAAA,KAAK,EAAEF,GAAG,CAACY,MAAJ,GAAaV,KAAb,GAAqBW,QAArB,CAA8B,UAA9B;AAD4B,KAAnB,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUG,UAACC,KAAD,EAAW;AAAA,QAERX,MAFQ,GAUNW,KAVM,CAERX,MAFQ;AAAA,QAGRY,OAHQ,GAUND,KAVM,CAGRC,OAHQ;AAAA,QAIRC,MAJQ,GAUNF,KAVM,CAIRE,MAJQ;AAAA,QAKRC,KALQ,GAUNH,KAVM,CAKRG,KALQ;AAAA,QAMRC,YANQ,GAUNJ,KAVM,CAMRI,YANQ;AAAA,QAORC,YAPQ,GAUNL,KAVM,CAORK,YAPQ;AAAA,QAQRC,UARQ,GAUNN,KAVM,CAQRM,UARQ;AAAA,QASRC,YATQ,GAUNP,KAVM,CASRO,YATQ;AAWV,WACE;AAAM,MAAA,QAAQ,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIE;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,WAAW,EAAC,kBAFd;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAEnB,MAAM,CAACD,KAJhB;AAKE,MAAA,QAAQ,EAAEiB,YALZ;AAME,MAAA,MAAM,EAAEC,UANV;AAOE,MAAA,SAAS,EACPJ,MAAM,CAACd,KAAP,IAAgBa,OAAO,CAACb,KAAxB,GAAgC,kBAAhC,GAAqD,YARzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAeGc,MAAM,CAACd,KAAP,IAAgBa,OAAO,CAACb,KAAxB,IACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCc,MAAM,CAACd,KAAxC,CAhBJ,EAmBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAEgB,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAnBF,CADF;AA0BD,GA/CH,CADA;AAmDD,CApDM;AAsDP,eAAejB,SAAf","sourcesContent":["import { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nexport const LoginForm = () => {\n  return (\n  <Formik\n    initialValues={{ email: \"\" }}\n    onSubmit={async (values) => {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      alert(JSON.stringify(values, null, 2));\n    }}\n    validationSchema={Yup.object().shape({\n      email: Yup.string().email().required(\"Required\"),\n    })}\n  >\n    {(props) => {\n      const {\n        values,\n        touched,\n        errors,\n        dirty,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n      } = props;\n      return (\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"email\" style={{ display: \"block\" }}>\n            Email\n          </label>\n          <input\n            id=\"email\"\n            placeholder=\"Enter your email\"\n            type=\"text\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            className={\n              errors.email && touched.email ? \"text-input error\" : \"text-input\"\n            }\n          />\n          {errors.email && touched.email && (\n            <div className=\"input-feedback\">{errors.email}</div>\n          )}\n\n          <button type=\"submit\" disabled={isSubmitting}>\n            Login\n          </button>\n\n        </form>\n      )\n    }}\n  </Formik>\n  )\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}