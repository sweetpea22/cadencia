{"ast":null,"code":"var _jsxFileName = \"/Users/studiopreza/Desktop/cadencia/cadencia/web/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nimport { initializeApollo } from \"../lib/apolloClient\";\nexport const HELLO_QUERY = gql`\n  query {\n    hello\n  }\n`;\nexport default (() => {\n  const {\n    data\n  } = useQuery(HELLO_QUERY, {\n    notifyOnNetworkStatusChange: true\n  });\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }, \"Query Response: \", data.hello);\n});\nexport async function getStaticProps() {\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: HELLO_QUERY\n  });\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    },\n    revalidate: 1\n  };\n}","map":{"version":3,"sources":["/Users/studiopreza/Desktop/cadencia/cadencia/web/pages/index.js"],"names":["gql","useQuery","initializeApollo","HELLO_QUERY","data","notifyOnNetworkStatusChange","hello","getStaticProps","apolloClient","query","props","initialApolloState","cache","extract","revalidate"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,OAAO,MAAMC,WAAW,GAAGH,GAAI;;;;CAAxB;AAMP,gBAAe,MAAM;AACnB,QAAM;AAAEI,IAAAA;AAAF,MAAWH,QAAQ,CAACE,WAAD,EAAc;AACrCE,IAAAA,2BAA2B,EAAE;AADQ,GAAd,CAAzB;AAIA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqBD,IAAI,CAACE,KAA1B,CAAP;AACD,CAND;AAQA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,YAAY,GAAGN,gBAAgB,EAArC;AAEA,QAAMM,YAAY,CAACC,KAAb,CAAmB;AACvBA,IAAAA,KAAK,EAAEN;AADgB,GAAnB,CAAN;AAIA,SAAO;AACLO,IAAAA,KAAK,EAAE;AACLC,MAAAA,kBAAkB,EAAEH,YAAY,CAACI,KAAb,CAAmBC,OAAnB;AADf,KADF;AAILC,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport { initializeApollo } from \"../lib/apolloClient\";\n\nexport const HELLO_QUERY = gql`\n  query {\n    hello\n  }\n`;\n\nexport default () => {\n  const { data } = useQuery(HELLO_QUERY, {\n    notifyOnNetworkStatusChange: true,\n  });\n\n  return <h1>Query Response: {data.hello}</h1>;\n};\n\nexport async function getStaticProps() {\n  const apolloClient = initializeApollo();\n\n  await apolloClient.query({\n    query: HELLO_QUERY,\n  });\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract(),\n    },\n    revalidate: 1,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}