{"ast":null,"code":"var _jsxFileName = \"/Users/studiopreza/Desktop/cadencia/cadencia/web/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nexport const HELLO_QUERY = gql`\n  query {\n    hello\n  }\n`;\nexport default (() => {\n  const {\n    data\n  } = useQuery(HELLO_QUERY, {\n    notifyOnNetworkStatusChange: true\n  });\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 8\n    }\n  }, \"Query Response: $\");\n});\nexport async function getStaticProps() {\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: HELLO_QUERY\n  });\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    },\n    revalidate: 1\n  };\n}","map":{"version":3,"sources":["/Users/studiopreza/Desktop/cadencia/cadencia/web/pages/index.js"],"names":["gql","useQuery","HELLO_QUERY","data","notifyOnNetworkStatusChange","getStaticProps","apolloClient","initializeApollo","query","props","initialApolloState","cache","extract","revalidate"],"mappings":";;;AAAA,SAAQA,GAAR,EAAaC,QAAb,QAA4B,gBAA5B;AAEA,OAAO,MAAMC,WAAW,GAAGF,GAAI;;;;CAAxB;AASP,gBAAe,MAAM;AACnB,QAAM;AAACG,IAAAA;AAAD,MAASF,QAAQ,CAACC,WAAD,EAAc;AACnCE,IAAAA,2BAA2B,EAAE;AADM,GAAd,CAAvB;AAIF,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACC,CAND;AASA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,YAAY,GAAGC,gBAAgB,EAArC;AAEA,QAAMD,YAAY,CAACE,KAAb,CAAmB;AACvBA,IAAAA,KAAK,EAAEN;AADgB,GAAnB,CAAN;AAIA,SAAO;AACLO,IAAAA,KAAK,EAAE;AACLC,MAAAA,kBAAkB,EAAEJ,YAAY,CAACK,KAAb,CAAmBC,OAAnB;AADf,KADF;AAILC,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD","sourcesContent":["import {gql, useQuery} from \"@apollo/client\";\n\nexport const HELLO_QUERY = gql`\n  query {\n    hello\n  }\n`;\n\n\n\n\nexport default () => {\n  const {data} = useQuery(HELLO_QUERY, {\n    notifyOnNetworkStatusChange: true\n  });\n  \nreturn <h1>Query Response: ${}</h1>;\n};\n\n\nexport async function getStaticProps() {\n  const apolloClient = initializeApollo();\n\n  await apolloClient.query({\n    query: HELLO_QUERY,\n  });\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract(),\n    },\n    revalidate: 1,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}