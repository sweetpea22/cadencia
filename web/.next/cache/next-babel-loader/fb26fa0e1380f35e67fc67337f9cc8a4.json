{"ast":null,"code":"var _jsxFileName = \"/Users/studiopreza/Desktop/cadencia/cadencia/components/auth/Login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst LoginInputs = props => {\n  const {\n    values,\n    touched,\n    errors,\n    dirty,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = props;\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    style: {\n      display: \"block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    id: \"email\",\n    placeholder: \"Enter your email\",\n    type: \"text\",\n    value: values.email,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.email && touched.email ? \"text-input error\" : \"text-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), errors.email && touched.email && __jsx(\"div\", {\n    className: \"input-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, errors.email), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Login\"));\n};\n\nexport const LoginForm = () => {\n  return __jsx(Formik, {\n    initialValues: {\n      email: \"\"\n    },\n    onSubmit: async values => {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      alert(JSON.stringify(values, null, 2));\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().required(\"Required\")\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(LoginInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n};\nexport default LoginForm;","map":{"version":3,"sources":["/Users/studiopreza/Desktop/cadencia/cadencia/components/auth/Login.js"],"names":["Formik","Yup","LoginInputs","props","values","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","display","email","LoginForm","Promise","resolve","setTimeout","alert","JSON","stringify","object","shape","string","required"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,YANI;AAOJC,IAAAA,UAPI;AAQJC,IAAAA;AARI,MASFR,KATJ;AAUA,SACE;AAAM,IAAA,QAAQ,EAAEQ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAER,MAAM,CAACS,KAJhB;AAKE,IAAA,QAAQ,EAAEJ,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAOE,IAAA,SAAS,EACPJ,MAAM,CAACO,KAAP,IAAgBR,OAAO,CAACQ,KAAxB,GAAgC,kBAAhC,GAAqD,YARzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAeGP,MAAM,CAACO,KAAP,IAAgBR,OAAO,CAACQ,KAAxB,IACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCP,MAAM,CAACO,KAAxC,CAhBJ,EAmBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEL,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnBF,CADF;AAyBD,CApCD;;AAsCA,OAAO,MAAMM,SAAS,GAAG,MAAM;AAC7B,SACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KADjB;AAEE,IAAA,QAAQ,EAAE,MAAOT,MAAP,IAAkB;AAC1B,YAAM,IAAIW,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAU,GAAV,CAAnC,CAAN;AACAE,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAehB,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACD,KALH;AAME,IAAA,gBAAgB,EAAEH,GAAG,CAACoB,MAAJ,GAAaC,KAAb,CAAmB;AACnCT,MAAAA,KAAK,EAAEZ,GAAG,CAACsB,MAAJ,GAAaV,KAAb,GAAqBW,QAArB,CAA8B,UAA9B;AAD4B,KAAnB,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD,CAfM;AAiBP,eAAeV,SAAf","sourcesContent":["import { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst LoginInputs = (props) => {\n  const {\n    values,\n    touched,\n    errors,\n    dirty,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n  } = props;\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"email\" style={{ display: \"block\" }}>\n        Email\n      </label>\n      <input\n        id=\"email\"\n        placeholder=\"Enter your email\"\n        type=\"text\"\n        value={values.email}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        className={\n          errors.email && touched.email ? \"text-input error\" : \"text-input\"\n        }\n      />\n      {errors.email && touched.email && (\n        <div className=\"input-feedback\">{errors.email}</div>\n      )}\n\n      <button type=\"submit\" disabled={isSubmitting}>\n        Login\n      </button>\n    </form>\n  );\n};\n\nexport const LoginForm = () => {\n  return (\n    <Formik\n      initialValues={{ email: \"\" }}\n      onSubmit={async (values) => {\n        await new Promise((resolve) => setTimeout(resolve, 500));\n        alert(JSON.stringify(values, null, 2));\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string().email().required(\"Required\"),\n      })}\n    >\n      <LoginInput />\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}