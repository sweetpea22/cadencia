{"ast":null,"code":"var _jsxFileName = \"/Users/studiopreza/Desktop/cadencia/cadencia/web/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport dynamic from \"next/dynamic\";\nimport UniswapList, { UNISWAP_QUERY, uniswapQueryVars } from \"../components/uniswap\";\nimport { initializeApollo } from \"../lib/apolloClient\";\nimport BalancerList, { BALANCER_QUERY, balancerQueryVars } from \"../components/balancer\";\nconst DynamicComponentWithNoSSR = dynamic(() => import(\"../components/balancer\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"../components/balancer\")],\n    modules: [\"../components/balancer\"]\n  }\n});\n\nconst IndexPage = () => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }\n}, \"Total Trade Volume\"), __jsx(\"div\", {\n  style: {\n    display: \"flex\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}, __jsx(UniswapList, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }\n}), __jsx(BalancerList, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }\n})));\n\nexport async function getStaticProps() {\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: UNISWAP_QUERY,\n    variables: uniswapQueryVars\n  });\n  await apolloClient.query({\n    query: BALANCER_QUERY,\n    variables: balancerQueryVars,\n    context: {\n      dataSrc: \"balancer\"\n    }\n  });\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    }\n  };\n}\nexport default IndexPage;","map":{"version":3,"sources":["/Users/studiopreza/Desktop/cadencia/cadencia/web/pages/index.js"],"names":["dynamic","UniswapList","UNISWAP_QUERY","uniswapQueryVars","initializeApollo","BalancerList","BALANCER_QUERY","balancerQueryVars","DynamicComponentWithNoSSR","ssr","IndexPage","display","getStaticProps","apolloClient","query","variables","context","dataSrc","props","initialApolloState","cache","extract"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAOC,WAAP,IACEC,aADF,EAEEC,gBAFF,QAGO,uBAHP;AAIA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,OAAOC,YAAP,IACEC,cADF,EAEEC,iBAFF,QAGO,wBAHP;AAMA,MAAMC,yBAAyB,GAAGR,OAAO,CACvC,MAAM,OAAO,wBAAP,CADiC,EAEvC;AAAES,EAAAA,GAAG,EAAE,KAAP;AAAA;AAAA,wCADa,wBACb;AAAA,cADa,wBACb;AAAA;AAAA,CAFuC,CAAzC;;AAMA,MAAMC,SAAS,GAAG,MAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAK,EAAA,KAAK,EAAE;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CAFF,CADF;;AAUA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,YAAY,GAAGT,gBAAgB,EAArC;AAEA,QAAMS,YAAY,CAACC,KAAb,CAAmB;AACvBA,IAAAA,KAAK,EAAEZ,aADgB;AAEvBa,IAAAA,SAAS,EAAEZ;AAFY,GAAnB,CAAN;AAKA,QAAMU,YAAY,CAACC,KAAb,CAAmB;AACvBA,IAAAA,KAAK,EAAER,cADgB;AAEvBS,IAAAA,SAAS,EAAER,iBAFY;AAGvBS,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AADF;AAHc,GAAnB,CAAN;AAQA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,kBAAkB,EAAEN,YAAY,CAACO,KAAb,CAAmBC,OAAnB;AADf;AADF,GAAP;AAKD;AAED,eAAeX,SAAf","sourcesContent":["import dynamic from \"next/dynamic\";\nimport UniswapList, {\n  UNISWAP_QUERY,\n  uniswapQueryVars,\n} from \"../components/uniswap\";\nimport { initializeApollo } from \"../lib/apolloClient\";\nimport BalancerList, {\n  BALANCER_QUERY,\n  balancerQueryVars,\n} from \"../components/balancer\";\n\n\nconst DynamicComponentWithNoSSR = dynamic(\n  () => import(\"../components/balancer\"),\n  { ssr: false }\n);\n\n\nconst IndexPage = () => (\n  <div>\n    <h1>Total Trade Volume</h1>\n    <div style={{ display: \"flex\" }}>\n      <UniswapList />\n      <BalancerList />\n    </div>\n  </div>\n);\n\nexport async function getStaticProps() {\n  const apolloClient = initializeApollo();\n\n  await apolloClient.query({\n    query: UNISWAP_QUERY,\n    variables: uniswapQueryVars,\n  });\n\n  await apolloClient.query({\n    query: BALANCER_QUERY,\n    variables: balancerQueryVars,\n    context: {\n      dataSrc: \"balancer\",\n    },\n  });\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract(),\n    },\n  };\n}\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}