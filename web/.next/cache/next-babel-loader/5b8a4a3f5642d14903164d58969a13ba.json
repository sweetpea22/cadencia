{"ast":null,"code":"var _jsxFileName = \"/Users/studiopreza/Desktop/cadencia/cadencia/components/Posts.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery, NetworkStatus } from \"@apollo/client\";\nexport const ALL_POSTS_QUERY = gql`\n  query allPosts() {\n    allPosts(orderBy: $name, $first: 10) {\n      id\n      name\n    }\n    _allPostsMeta {\n      count\n    }\n  }\n`;\nexport default function PostList() {\n  const {\n    loading,\n    error,\n    data,\n    fetchMore,\n    networkStatus\n  } = useQuery(ALL_POSTS_QUERY, {\n    variables: allPostsQueryVars,\n    // Setting this value to true will make the component rerender when\n    // the \"networkStatus\" changes, so we are able to know if it is fetching\n    // more data\n    notifyOnNetworkStatusChange: true\n  });\n  const loadingMorePosts = networkStatus === NetworkStatus.fetchMore;\n\n  const loadMorePosts = () => {\n    fetchMore({\n      variables: {\n        skip: allPosts.length\n      }\n    });\n  };\n\n  if (error) return __jsx(ErrorMessage, {\n    message: \"Error loading posts.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  });\n  if (loading && !loadingMorePosts) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 44\n    }\n  }, \"Loading\");\n  const {\n    allPosts,\n    _allPostsMeta\n  } = data;\n  const areMorePosts = allPosts.length < _allPostsMeta.count;\n  return __jsx(\"section\", {\n    className: \"jsx-1139836954\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"ul\", {\n    className: \"jsx-1139836954\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, allPosts.map((post, index) => __jsx(\"li\", {\n    key: post.id,\n    className: \"jsx-1139836954\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-1139836954\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"jsx-1139836954\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, index + 1, \". \"), __jsx(\"a\", {\n    href: post.url,\n    className: \"jsx-1139836954\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, post.title), __jsx(PostUpvoter, {\n    id: post.id,\n    votes: post.votes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }))))), areMorePosts && __jsx(\"button\", {\n    onClick: () => loadMorePosts(),\n    disabled: loadingMorePosts,\n    className: \"jsx-1139836954\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, loadingMorePosts ? \"Loading...\" : \"Show More\"), __jsx(_JSXStyle, {\n    id: \"1139836954\",\n    __self: this\n  }, \"section.jsx-1139836954{padding-bottom:20px;}li.jsx-1139836954{display:block;margin-bottom:10px;}div.jsx-1139836954{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}a.jsx-1139836954{font-size:14px;margin-right:10px;-webkit-text-decoration:none;text-decoration:none;padding-bottom:0;border:0;}span.jsx-1139836954{font-size:14px;margin-right:5px;}ul.jsx-1139836954{margin:0;padding:0;}button.jsx-1139836954:before{-webkit-align-self:center;-ms-flex-item-align:center;align-self:center;border-style:solid;border-width:6px 4px 0 4px;border-color:#ffffff transparent transparent transparent;content:\\\"\\\";height:0;margin-right:5px;width:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdHVkaW9wcmV6YS9EZXNrdG9wL2NhZGVuY2lhL2NhZGVuY2lhL2NvbXBvbmVudHMvUG9zdHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNERrQixBQUcrQixBQUdOLEFBSUssQUFJSixBQU9BLEFBSU4sQUFJUyxTQUhSLEtBbkJTLENBUUQsQUFPRCxJQUtuQixDQXZCQSxZQW1CQSxDQWZBLEFBUXVCLHNDQWNGLFlBYkYsT0FjVSxHQXBCZCxPQU9KLFNBQ1gsUUFhMkQsa0RBcEIzRCxPQXFCYSxXQUNGLFNBQ1EsaUJBQ1QsUUFDViIsImZpbGUiOiIvVXNlcnMvc3R1ZGlvcHJlemEvRGVza3RvcC9jYWRlbmNpYS9jYWRlbmNpYS9jb21wb25lbnRzL1Bvc3RzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ3FsLCB1c2VRdWVyeSwgTmV0d29ya1N0YXR1cyB9IGZyb20gXCJAYXBvbGxvL2NsaWVudFwiO1xuXG5leHBvcnQgY29uc3QgQUxMX1BPU1RTX1FVRVJZID0gZ3FsYFxuICBxdWVyeSBhbGxQb3N0cygpIHtcbiAgICBhbGxQb3N0cyhvcmRlckJ5OiAkbmFtZSwgJGZpcnN0OiAxMCkge1xuICAgICAgaWRcbiAgICAgIG5hbWVcbiAgICB9XG4gICAgX2FsbFBvc3RzTWV0YSB7XG4gICAgICBjb3VudFxuICAgIH1cbiAgfVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUG9zdExpc3QoKSB7XG4gIGNvbnN0IHsgbG9hZGluZywgZXJyb3IsIGRhdGEsIGZldGNoTW9yZSwgbmV0d29ya1N0YXR1cyB9ID0gdXNlUXVlcnkoXG4gICAgQUxMX1BPU1RTX1FVRVJZLFxuICAgIHtcbiAgICAgIHZhcmlhYmxlczogYWxsUG9zdHNRdWVyeVZhcnMsXG4gICAgICAvLyBTZXR0aW5nIHRoaXMgdmFsdWUgdG8gdHJ1ZSB3aWxsIG1ha2UgdGhlIGNvbXBvbmVudCByZXJlbmRlciB3aGVuXG4gICAgICAvLyB0aGUgXCJuZXR3b3JrU3RhdHVzXCIgY2hhbmdlcywgc28gd2UgYXJlIGFibGUgdG8ga25vdyBpZiBpdCBpcyBmZXRjaGluZ1xuICAgICAgLy8gbW9yZSBkYXRhXG4gICAgICBub3RpZnlPbk5ldHdvcmtTdGF0dXNDaGFuZ2U6IHRydWUsXG4gICAgfVxuICApO1xuXG4gIGNvbnN0IGxvYWRpbmdNb3JlUG9zdHMgPSBuZXR3b3JrU3RhdHVzID09PSBOZXR3b3JrU3RhdHVzLmZldGNoTW9yZTtcblxuICBjb25zdCBsb2FkTW9yZVBvc3RzID0gKCkgPT4ge1xuICAgIGZldGNoTW9yZSh7XG4gICAgICB2YXJpYWJsZXM6IHtcbiAgICAgICAgc2tpcDogYWxsUG9zdHMubGVuZ3RoLFxuICAgICAgfSxcbiAgICB9KTtcbiAgfTtcblxuICBpZiAoZXJyb3IpIHJldHVybiA8RXJyb3JNZXNzYWdlIG1lc3NhZ2U9XCJFcnJvciBsb2FkaW5nIHBvc3RzLlwiIC8+O1xuICBpZiAobG9hZGluZyAmJiAhbG9hZGluZ01vcmVQb3N0cykgcmV0dXJuIDxkaXY+TG9hZGluZzwvZGl2PjtcblxuICBjb25zdCB7IGFsbFBvc3RzLCBfYWxsUG9zdHNNZXRhIH0gPSBkYXRhO1xuICBjb25zdCBhcmVNb3JlUG9zdHMgPSBhbGxQb3N0cy5sZW5ndGggPCBfYWxsUG9zdHNNZXRhLmNvdW50O1xuXG4gIHJldHVybiAoXG4gICAgPHNlY3Rpb24+XG4gICAgICA8dWw+XG4gICAgICAgIHthbGxQb3N0cy5tYXAoKHBvc3QsIGluZGV4KSA9PiAoXG4gICAgICAgICAgPGxpIGtleT17cG9zdC5pZH0+XG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICA8c3Bhbj57aW5kZXggKyAxfS4gPC9zcGFuPlxuICAgICAgICAgICAgICA8YSBocmVmPXtwb3N0LnVybH0+e3Bvc3QudGl0bGV9PC9hPlxuICAgICAgICAgICAgICA8UG9zdFVwdm90ZXIgaWQ9e3Bvc3QuaWR9IHZvdGVzPXtwb3N0LnZvdGVzfSAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9saT5cbiAgICAgICAgKSl9XG4gICAgICA8L3VsPlxuICAgICAge2FyZU1vcmVQb3N0cyAmJiAoXG4gICAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gbG9hZE1vcmVQb3N0cygpfSBkaXNhYmxlZD17bG9hZGluZ01vcmVQb3N0c30+XG4gICAgICAgICAge2xvYWRpbmdNb3JlUG9zdHMgPyBcIkxvYWRpbmcuLi5cIiA6IFwiU2hvdyBNb3JlXCJ9XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgKX1cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgc2VjdGlvbiB7XG4gICAgICAgICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gICAgICAgIH1cbiAgICAgICAgbGkge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgIH1cbiAgICAgICAgZGl2IHtcbiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIH1cbiAgICAgICAgYSB7XG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICB9XG4gICAgICAgIHNwYW4ge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICAgICAgfVxuICAgICAgICB1bCB7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIH1cbiAgICAgICAgYnV0dG9uOmJlZm9yZSB7XG4gICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgICAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICAgICAgYm9yZGVyLXdpZHRoOiA2cHggNHB4IDAgNHB4O1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogI2ZmZmZmZiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICAgICAgICB3aWR0aDogMDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvc2VjdGlvbj5cbiAgKTtcbn1cbiJdfQ== */\\n/*@ sourceURL=/Users/studiopreza/Desktop/cadencia/cadencia/components/Posts.js */\"));\n}","map":{"version":3,"sources":["/Users/studiopreza/Desktop/cadencia/cadencia/components/Posts.js"],"names":["gql","useQuery","NetworkStatus","ALL_POSTS_QUERY","PostList","loading","error","data","fetchMore","networkStatus","variables","allPostsQueryVars","notifyOnNetworkStatusChange","loadingMorePosts","loadMorePosts","skip","allPosts","length","_allPostsMeta","areMorePosts","count","map","post","index","id","url","title","votes"],"mappings":";;;;AAAA,SAASA,GAAT,EAAcC,QAAd,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,OAAO,MAAMC,eAAe,GAAGH,GAAI;;;;;;;;;;CAA5B;AAYP,eAAe,SAASI,QAAT,GAAoB;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAAqDR,QAAQ,CACjEE,eADiE,EAEjE;AACEO,IAAAA,SAAS,EAAEC,iBADb;AAEE;AACA;AACA;AACAC,IAAAA,2BAA2B,EAAE;AAL/B,GAFiE,CAAnE;AAWA,QAAMC,gBAAgB,GAAGJ,aAAa,KAAKP,aAAa,CAACM,SAAzD;;AAEA,QAAMM,aAAa,GAAG,MAAM;AAC1BN,IAAAA,SAAS,CAAC;AACRE,MAAAA,SAAS,EAAE;AACTK,QAAAA,IAAI,EAAEC,QAAQ,CAACC;AADN;AADH,KAAD,CAAT;AAKD,GAND;;AAQA,MAAIX,KAAJ,EAAW,OAAO,MAAC,YAAD;AAAc,IAAA,OAAO,EAAC,sBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACX,MAAID,OAAO,IAAI,CAACQ,gBAAhB,EAAkC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAElC,QAAM;AAAEG,IAAAA,QAAF;AAAYE,IAAAA;AAAZ,MAA8BX,IAApC;AACA,QAAMY,YAAY,GAAGH,QAAQ,CAACC,MAAT,GAAkBC,aAAa,CAACE,KAArD;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,CAACK,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KACZ;AAAI,IAAA,GAAG,EAAED,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,KAAK,GAAG,CAAf,OADF,EAEE;AAAG,IAAA,IAAI,EAAED,IAAI,CAACG,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBH,IAAI,CAACI,KAAzB,CAFF,EAGE,MAAC,WAAD;AAAa,IAAA,EAAE,EAAEJ,IAAI,CAACE,EAAtB;AAA0B,IAAA,KAAK,EAAEF,IAAI,CAACK,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADD,CADH,CADF,EAYGR,YAAY,IACX;AAAQ,IAAA,OAAO,EAAE,MAAML,aAAa,EAApC;AAAwC,IAAA,QAAQ,EAAED,gBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,gBAAgB,GAAG,YAAH,GAAkB,WADrC,CAbJ;AAAA;AAAA;AAAA,iwJADF;AA0DD","sourcesContent":["import { gql, useQuery, NetworkStatus } from \"@apollo/client\";\n\nexport const ALL_POSTS_QUERY = gql`\n  query allPosts() {\n    allPosts(orderBy: $name, $first: 10) {\n      id\n      name\n    }\n    _allPostsMeta {\n      count\n    }\n  }\n`;\n\nexport default function PostList() {\n  const { loading, error, data, fetchMore, networkStatus } = useQuery(\n    ALL_POSTS_QUERY,\n    {\n      variables: allPostsQueryVars,\n      // Setting this value to true will make the component rerender when\n      // the \"networkStatus\" changes, so we are able to know if it is fetching\n      // more data\n      notifyOnNetworkStatusChange: true,\n    }\n  );\n\n  const loadingMorePosts = networkStatus === NetworkStatus.fetchMore;\n\n  const loadMorePosts = () => {\n    fetchMore({\n      variables: {\n        skip: allPosts.length,\n      },\n    });\n  };\n\n  if (error) return <ErrorMessage message=\"Error loading posts.\" />;\n  if (loading && !loadingMorePosts) return <div>Loading</div>;\n\n  const { allPosts, _allPostsMeta } = data;\n  const areMorePosts = allPosts.length < _allPostsMeta.count;\n\n  return (\n    <section>\n      <ul>\n        {allPosts.map((post, index) => (\n          <li key={post.id}>\n            <div>\n              <span>{index + 1}. </span>\n              <a href={post.url}>{post.title}</a>\n              <PostUpvoter id={post.id} votes={post.votes} />\n            </div>\n          </li>\n        ))}\n      </ul>\n      {areMorePosts && (\n        <button onClick={() => loadMorePosts()} disabled={loadingMorePosts}>\n          {loadingMorePosts ? \"Loading...\" : \"Show More\"}\n        </button>\n      )}\n      <style jsx>{`\n        section {\n          padding-bottom: 20px;\n        }\n        li {\n          display: block;\n          margin-bottom: 10px;\n        }\n        div {\n          align-items: center;\n          display: flex;\n        }\n        a {\n          font-size: 14px;\n          margin-right: 10px;\n          text-decoration: none;\n          padding-bottom: 0;\n          border: 0;\n        }\n        span {\n          font-size: 14px;\n          margin-right: 5px;\n        }\n        ul {\n          margin: 0;\n          padding: 0;\n        }\n        button:before {\n          align-self: center;\n          border-style: solid;\n          border-width: 6px 4px 0 4px;\n          border-color: #ffffff transparent transparent transparent;\n          content: \"\";\n          height: 0;\n          margin-right: 5px;\n          width: 0;\n        }\n      `}</style>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}