{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/studiopreza/Desktop/cadencia/cadencia/components/auth/Register.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Formik, Field } from \"formik\";\nimport { Button } from \"../antd\";\nimport * as Yup from \"yup\";\nimport styles from \"./auth.module.css\";\nimport InputField from \"./InputField\";\nexport var RegisterForm = function RegisterForm(props) {\n  var _props$value = props.value,\n      value = _props$value === void 0 ? \"\" : _props$value,\n      errors = props.errors,\n      handleChange = props.handleChange,\n      handleSubmit = props.handleSubmit;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: styles.pageWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: styles.formPageHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Welcome back!\"), \"(\", __jsx(Formik, {\n    onSubmit: function _callee(data) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // const response = await register({\n              //   variables: {\n              //     data,\n              //   },\n              // });\n              console.log(response);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    initialValues: {\n      email: \"\",\n      confirmPassword: \"\",\n      password: \"\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    onSubmit: function onSubmit(data) {\n      return console.log(data);\n    },\n    className: styles.formWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    style: {\n      display: \"block\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Email\"), __jsx(Field, {\n    component: InputField,\n    name: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"password\",\n    style: {\n      display: \"block\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Password\"), __jsx(Field, {\n    component: InputField,\n    name: \"password\",\n    type: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"confirmPassword\",\n    style: {\n      display: \"block\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Confirm Password\"), __jsx(Field, {\n    component: InputField,\n    name: \"confirmPassword\",\n    type: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    className: styles.submitButton,\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Create Account\")))));\n};\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/studiopreza/Desktop/cadencia/cadencia/components/auth/Register.jsx"],"names":["Formik","Field","Button","Yup","styles","InputField","RegisterForm","props","value","errors","handleChange","handleSubmit","pageWrapper","formPageHeader","data","console","log","response","email","confirmPassword","password","formWrapper","display","submitButton"],"mappings":";;;;;;;AAAA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,QAA9B;AACA,SAASC,MAAT,QAAuB,SAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,qBACsBA,KADtB,CAC7BC,KAD6B;AAAA,MAC7BA,KAD6B,6BACrB,EADqB;AAAA,MACjBC,MADiB,GACsBF,KADtB,CACjBE,MADiB;AAAA,MACTC,YADS,GACsBH,KADtB,CACTG,YADS;AAAA,MACKC,YADL,GACsBJ,KADtB,CACKI,YADL;AAGrC,SACE,4BACE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACQ,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAER,MAAM,CAACS,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,OAEE,MAAC,MAAD;AACE,IAAA,QAAQ,EAAE,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AACR;AACA;AACA;AACA;AACA;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;;AANQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADZ;AASE,IAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,eAAe,EAAE,EAFJ;AAGbC,MAAAA,QAAQ,EAAE;AAHG,KATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeE;AACE,IAAA,QAAQ,EAAE,kBAACN,IAAD;AAAA,aAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAV;AAAA,KADZ;AAEE,IAAA,SAAS,EAAEV,MAAM,CAACiB,WAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAOE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEjB,UAAlB;AAA8B,IAAA,IAAI,EAAC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EASE;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEiB,MAAAA,OAAO,EAAE;AAAX,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,EAYE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEjB,UAAlB;AAA8B,IAAA,IAAI,EAAC,UAAnC;AAA8C,IAAA,IAAI,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAcE;AAAO,IAAA,OAAO,EAAC,iBAAf;AAAiC,IAAA,KAAK,EAAE;AAAEiB,MAAAA,OAAO,EAAE;AAAX,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAdF,EAiBE,MAAC,KAAD;AACE,IAAA,SAAS,EAAEjB,UADb;AAEE,IAAA,IAAI,EAAC,iBAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAsBE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAED,MAAM,CAACmB,YAA1B;AAAwC,IAAA,IAAI,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtBF,CAfF,CAFF,CADF,CADF;AAiDD,CApDM;AAsDP,eAAejB,YAAf","sourcesContent":["import { Formik, Field } from \"formik\";\nimport { Button } from \"../antd\";\nimport * as Yup from \"yup\";\nimport styles from \"./auth.module.css\";\nimport InputField from \"./InputField\";\n\nexport const RegisterForm = (props) => {\n  const { value = \"\", errors, handleChange, handleSubmit } = props;\n\n  return (\n    <>\n      <div className={styles.pageWrapper}>\n        <h1 className={styles.formPageHeader}>Welcome back!</h1>(\n        <Formik\n          onSubmit={async (data) => {\n            // const response = await register({\n            //   variables: {\n            //     data,\n            //   },\n            // });\n            console.log(response);\n          }}\n          initialValues={{\n            email: \"\",\n            confirmPassword: \"\",\n            password: \"\",\n          }}\n        >\n          <form\n            onSubmit={(data) => console.log(data)}\n            className={styles.formWrapper}\n          >\n            <label htmlFor=\"email\" style={{ display: \"block\" }}>\n              Email\n            </label>\n            <Field component={InputField} name=\"email\" />\n\n            <label htmlFor=\"password\" style={{ display: \"block\" }}>\n              Password\n            </label>\n            <Field component={InputField} name=\"password\" type=\"password\" />\n\n            <label htmlFor=\"confirmPassword\" style={{ display: \"block\" }}>\n              Confirm Password\n            </label>\n            <Field\n              component={InputField}\n              name=\"confirmPassword\"\n              type=\"password\"\n            />\n            <Button className={styles.submitButton} type=\"submit\">\n              Create Account\n            </Button>\n          </form>\n        </Formik>\n      </div>\n    </>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}