{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/studiopreza/Desktop/cadencia/cadencia/web/components/auth/Register.jsx\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation Register($data: RegisterInput!) {\\n    Register(data: $data) {\\n      id\\n      email\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport styles from \"./auth.module.css\";\nimport InputField from \"./InputField\";\nimport { gql, useMutation } from \"@apollo/client\";\nvar REGISTER_USER = gql(_templateObject());\n\nvar SignupForm = function SignupForm() {\n  var _useMutation = useMutation(REGISTER_USER),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      register = _useMutation2[0],\n      data = _useMutation2[1].data;\n\n  var formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    onSubmit: function onSubmit(data) {\n      var response;\n      return _regeneratorRuntime.async(function onSubmit$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(register({\n                variables: {\n                  data: {\n                    email: formik.values.email,\n                    password: formik.values.password,\n                    confirmPassword: formik.va\n                  }\n                }\n              }));\n\n            case 2:\n              response = _context.sent;\n              console.log(response);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: styles.pageWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: styles.formPageHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Welcome back!\"), __jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: styles.formWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Email\"), __jsx(InputField, {\n    id: \"email\",\n    name: \"email\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    value: formik.values.email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Password\"), __jsx(InputField, {\n    id: \"password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    value: formik.values.password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"confirmPassword\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Confirm Password\"), __jsx(InputField, {\n    id: \"confirmPassword\",\n    name: \"confirmPassword\",\n    type: \"password\",\n    onChange: formik.handleChange,\n    value: formik.values.confirmPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    className: styles.submitButton,\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport function getStaticProps() {\n  var apolloClient;\n  return _regeneratorRuntime.async(function getStaticProps$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          apolloClient = initializeApollo();\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(apolloClient.mutation({\n            mutation: REGISTER_USER\n          }));\n\n        case 3:\n          return _context2.abrupt(\"return\", {\n            props: {\n              initialApolloState: apolloClient.cache.extract()\n            }\n          });\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport default SignupForm;","map":{"version":3,"sources":["/Users/studiopreza/Desktop/cadencia/cadencia/web/components/auth/Register.jsx"],"names":["React","useFormik","styles","InputField","gql","useMutation","REGISTER_USER","SignupForm","register","data","formik","initialValues","email","password","confirmPassword","onSubmit","variables","values","va","response","console","log","pageWrapper","formPageHeader","handleSubmit","formWrapper","handleChange","submitButton","getStaticProps","apolloClient","initializeApollo","mutation","props","initialApolloState","cache","extract"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport styles from \"./auth.module.css\";\nimport InputField from \"./InputField\";\n\nimport { gql, useMutation } from \"@apollo/client\";\n\nconst REGISTER_USER = gql`\n  mutation Register($data: RegisterInput!) {\n    Register(data: $data) {\n      id\n      email\n    }\n  }\n`;\n\nconst SignupForm = () => {\n  const [register, { data }] = useMutation(REGISTER_USER);\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    },\n    onSubmit: async (data) => {\n      const response = await register({\n        variables: { data: {\n          email: formik.values.email,\n          password: formik.values.password,\n          confirmPassword: formik.va\n        } },\n      });\n      console.log(response);\n    },\n  });\n\n  return (\n    <>\n      <div className={styles.pageWrapper}>\n        <h1 className={styles.formPageHeader}>Welcome back!</h1>\n        <form onSubmit={formik.handleSubmit} className={styles.formWrapper}>\n          <label htmlFor=\"email\">Email</label>\n          <InputField\n            id=\"email\"\n            name=\"email\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n          <label htmlFor=\"password\">Password</label>\n          <InputField\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\n          <InputField\n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.confirmPassword}\n          />\n          <button className={styles.submitButton} type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\n\nexport async function getStaticProps() {\n  const apolloClient = initializeApollo();\n\n  await apolloClient.mutation({\n    mutation: REGISTER_USER,\n  });\n\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract(),\n    },\n  };\n}\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}