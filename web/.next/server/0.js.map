{"version":3,"file":"0.js","sources":["webpack:///./components/antd/index.js","webpack:///./components/auth/InputField.jsx","webpack:///./components/auth/Register.jsx","webpack:///./components/auth/auth.module.css"],"sourcesContent":["export * from \"antd\";\n","import React from \"react\";\nimport { Input } from \"../antd\";\nimport styles from \"./auth.module.css\";\n\nconst InputField = ({ ...props }) => {\n  return <Input className={styles.formInput} {...props} />;\n};\n\nexport default InputField;\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport styles from \"./auth.module.css\";\nimport InputField from \"./InputField\";\n\nimport { gql, useMutation } from \"@apollo/client\";\n\nconst REGISTER_USER = gql`\n  mutation Register($data: RegisterInput!) {\n    Register(data: $data) {\n      id\n      email\n    }\n  }\n`;\n\nconst SignupForm = () => {\n  const [register, { data }] = useMutation(REGISTER_USER);\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    },\n    onSubmit: async (data) => {\n      const response = await register({\n        variables: {\n          data: {\n            email: formik.values.email,\n            password: formik.values.password,\n            confirmPassword: formik.values.confirmPassword,\n          },\n        },\n      });\n      console.log(response);\n    },\n  });\n\n  return (\n    <>\n      <div className={styles.pageWrapper}>\n        <h1 className={styles.formPageHeader}>Welcome back!</h1>\n        <form onSubmit={formik.handleSubmit} className={styles.formWrapper}>\n          <label htmlFor=\"email\">Email</label>\n          <InputField\n            id=\"email\"\n            name=\"email\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n          <label htmlFor=\"password\">Password</label>\n          <InputField\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\n          <InputField\n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.confirmPassword}\n          />\n          <button className={styles.submitButton} type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport async function getStaticProps() {\n  const apolloClient = initializeApollo();\n\n  await apolloClient.mutation({\n    mutation: REGISTER_USER,\n  });\n\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract(),\n    },\n  };\n}\n\nexport default SignupForm;\n","// Exports\nmodule.exports = {\n\t\"formWrapper\": \"auth_formWrapper__2F2Ad\",\n\t\"submitButton\": \"auth_submitButton__2frL9\",\n\t\"formInput\": \"auth_formInput__23ZEs\",\n\t\"pageWrapper\": \"auth_pageWrapper__1Jsdb\"\n};"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AADA;AASA;AACA;AAjBA;AAoBA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAEA;AACA;AADA;AAIA;AACA;AACA;AADA;AADA;AAKA;AAEA;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}